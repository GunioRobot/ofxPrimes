/*
 *     Generated by class-dump 3.2 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2009 by Steve Nygard.
 */

struct CGAffineTransform {
    float a;
    float b;
    float c;
    float d;
    float tx;
    float ty;
};

struct CGContext;

struct CGImage;

struct CGImageSource;

struct CGPath;

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct UIEdgeInsets {
    float top;
    float left;
    float bottom;
    float right;
};

struct _NSRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct _NSZone;

struct __CFArray;

struct __CFData;

struct __CFDictionary;

struct __CFMessagePort;

struct __CFRunLoop;

struct __CFRunLoopSource;

struct __CFString;

struct __GSEvent;

typedef struct {
    int _field1;
    int _field2;
    id _field3;
    id _field4;
    float _field5;
    int _field6;
    SEL _field7;
    id _field8;
} CDAnonymousStruct3;

typedef struct {
    int version;
    void *info;
    void *retain;
    void *release;
    void *copyDescription;
} CDAnonymousStruct2;

typedef struct {
    id _field1;
    float _field2;
    struct __CFArray *_field3;
    float _field4;
} CDAnonymousStruct1;

/*
 * File: PhotoLibrary
 * Arch: Intel 80x86 (i386)
 *       Current version: 1.0.0, Compatibility version: 1.0.0
 *
 *       Objective-C Garbage Collection: Unsupported
 */

@protocol CLLocationManagerDelegate <NSObject>
@end

@protocol MLPhotoBakedThumbnailsDelegate
- (void)decorateThumbnail:(id)arg1 inContext:(struct CGContext *)arg2;
@end

@protocol NSObject
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (Class)superclass;
- (Class)class;
- (id)self;
- (struct _NSZone *)zone;
- (id)performSelector:(SEL)arg1;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (BOOL)isProxy;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (unsigned int)retainCount;
- (id)description;
@end

@protocol PLAlbumScrollViewDelegate <NSObject>
@end

@protocol PLCameraControllerDelegate <NSObject>
@end

@protocol PLDataArrayInputStreamProgressDelegate
- (void)dataArrayInputStreamBytesWereRead:(id)arg1;
@end

@protocol PLImageScrollViewDelegate <NSObject>
- (id)imageScrollerSiblingForDirection:(int)arg1;
@end

@protocol PLImageWriterDelegate
- (void)imageWriterCompletedJob:(id)arg1 withError:(id)arg2;
- (void)imageWriterCompletedVideoJob:(id)arg1 withError:(id)arg2;
@end

@protocol PLItemView <NSObject>
- (void)updateZoomScales;
- (BOOL)isZoomedOut;
- (float)defaultZoomScale;
- (float)_zoomScale;
- (void)_setZoomScale:(float)arg1 duration:(double)arg2;
- (float)minRotatedScale;
- (int)orientationWhenLastDisplayed;
- (void)setOrientationWhenLastDisplayed:(int)arg1;
@end

@protocol PLVideoViewDelegate <NSObject>
@end

@protocol UIActionSheetDelegate <NSObject>
@end

@protocol UIImagePickerCameraViewController <NSObject>
- (BOOL)_showsCameraControls;
- (void)_setShowsCameraControls:(BOOL)arg1;
- (id)_cameraOverlayView;
- (void)_setCameraOverlayView:(id)arg1;
- (struct CGAffineTransform)_cameraViewTransform;
- (void)_setCameraViewTransform:(struct CGAffineTransform)arg1;
- (void)_takePicture;
@end

@protocol UIImagePickerControllerDelegate <NSObject>
@end

@protocol UIModalViewDelegate <NSObject>
@end

@protocol UIMovieScrubberDataSource <NSObject>
- (double)movieScrubberDuration:(id)arg1;
- (id)movieScrubber:(id)arg1 evenlySpacedTimestamps:(int)arg2 startingAt:(id)arg3 endingAt:(id)arg4;
- (id)movieScrubber:(id)arg1 timestampsStartingAt:(id)arg2 endingAt:(id)arg3 maxCount:(int)arg4;
- (float)movieScrubberThumbnailAspectRatio:(id)arg1;
- (void)movieScrubber:(id)arg1 requestThumbnailImageForTimestamp:(id)arg2;
@end

@protocol UIMovieScrubberDelegate <NSObject>
@end

@protocol UINavigationControllerDelegate <NSObject>
@end

@protocol UIScrollViewDelegate <NSObject>
@end

@protocol UITableViewDataSource <NSObject>
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>
@end

@protocol UITextFieldDelegate <NSObject>
@end

@protocol UITextViewDelegate <NSObject>
@end

@protocol UIToolbarDelegate <NSObject>
@end

@interface PLPhotoPicker : UIView
{
    id _delegate;
    PLUIController *_uiController;
    UIView *_contentView;
    UIView *_syncingContentView;
    PLCropOverlay *_cropOverlay;
    PLImageTile *_imageTile;
    UIAnimation *_throwAnimation;
    NSString *_progressLabel;
    NSDictionary *_customCropTitles;
    struct {
        unsigned int customAllowsPlayingSlideshowFlagInfo:2;
        unsigned int customAllowsFullSizeImageDisplayFlagInfo:2;
        unsigned int customAllowsZoomingWhenCroppingFlagInfo:2;
        unsigned int customCropPhotoAfterSelectionFlagInfo:2;
        unsigned int customShowCropUI:2;
        unsigned int customShowCamera:2;
        unsigned int syncing:1;
        unsigned int cancel:1;
        unsigned int unused:18;
    } _ppBitfields;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)setAllowsPlayingSlideshow:(BOOL)arg1;
- (void)setAllowsFullSizeImageDisplay:(BOOL)arg1;
- (void)setAllowsZoomingWhenCropping:(BOOL)arg1;
- (void)setCropPhotoAfterSelection:(BOOL)arg1;
- (void)setCropTitle:(id)arg1 subtitle:(id)arg2 cropButtonTitle:(id)arg3;
- (BOOL)showCamera;
- (void)setShowCamera:(BOOL)arg1;
- (void)setProgressLabel:(id)arg1;
- (void)willHide;
- (void)_updateUIControllerDelegateDependentFlags;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)_loadSyncUI;
- (void)_tearDownSyncUI;
- (void)_cacheUIControllerSettings;
- (void)_loadPickerUI;
- (void)_tearDownPickerUI;
- (void)navigationBar:(id)arg1 buttonClicked:(int)arg2;
- (void)_syncDidStart;
- (void)_syncDidEnd;
- (void)iTunesSyncPhaseWillStart:(int)arg1;
- (void)iTunesSyncPhaseDidFinish:(int)arg1 reason:(int)arg2;
- (void)cameraAlbumDidChange;
- (void)cancelButtonClicked;
- (void)imageWasSelected:(id)arg1;
- (void)cancelThrow:(id)arg1;
- (void)hopFinished:(id)arg1;
- (void)photoWasCroppedToRect:(struct CGRect)arg1 fullSizeImageData:(id)arg2 fullScreenImageData:(id)arg3 croppedImageData:(id)arg4 imageView:(id)arg5;
- (void)showCropUI;
- (void)setFullSizeImageData:(id)arg1 cropRect:(struct CGRect)arg2;
- (void)setFullSizeImage:(struct CGImage *)arg1 cropRect:(struct CGRect)arg2 orientation:(int)arg3;
- (BOOL)imageViewIsDisplayingLandscape:(id)arg1;
- (void)willStartGesture:(int)arg1 inView:(id)arg2 forEvent:(struct __GSEvent *)arg3;
- (void)cropOverlayWasCancelled:(id)arg1;
- (void)cropOverlayWasOKed:(id)arg1;
- (void)cropOverlay:(id)arg1 didFinishSaving:(id)arg2;

@end

@interface PLHopAnimation : UIFrameAnimation
{
    struct CGPoint _startMid;
    struct CGPoint _endMid;
    struct CGPoint _control1;
    struct CGPoint _control2;
    float _aX;
    float _bX;
    float _cX;
    float _aY;
    float _bY;
    float _cY;
    double _cumulativeTime;
}

- (void)updateControlPoints;
- (void)setStartFrame:(struct CGRect)arg1;
- (void)setEndFrame:(struct CGRect)arg1;
- (void)setProgress:(float)arg1;
- (double)cumulativeTime;

@end

@interface PLUIController : NSObject
{
    id _delegate;
    UIWindow *_window;
    struct {
        unsigned int showingCamera:1;
        unsigned int allowsAlbumSelection:1;
        unsigned int allowsPlayingSlideshow:1;
        unsigned int allowsFullSizeImageDisplay:1;
        unsigned int displayingPhotoPicker:1;
        unsigned int allowsZoomingWhenCropping:1;
        unsigned int cropPhotoAfterSelection:1;
        unsigned int showCancelInNavBar:1;
        unsigned int showingCameraPreview:1;
        unsigned int hasStartedLocation:1;
        unsigned int wantsThrowViewOnSave:1;
    } _flags;
    PLPhotoLibrary *_model;
    UITransitionView *_fullScreenTransitionView;
    PLCameraView *_cameraView;
    PLCameraButtonBar *_cameraRollButtonBar;
    int _barStyle;
    NSString *_cropTitle;
    NSString *_cropSubtitle;
    NSString *_cropButtonTitle;
    NSDictionary *_configuration;
}

+ (id)sharedInstance;
+ (BOOL)runningPhotosApplication;
- (id)init;
- (void)dealloc;
- (id)mainWindow;
- (void)setMainWindow:(id)arg1;
- (id)defaultPNGName;
- (void)setDelegate:(id)arg1;
- (id)contentViewWithFrame:(struct CGRect)arg1;
- (void)setConfiguration:(id)arg1;
- (id)configuration;
- (int)barStyle;
- (void)setBarStyle:(int)arg1;
- (BOOL)allowsPlayingSlideshow;
- (void)setAllowsPlayingSlideshow:(BOOL)arg1;
- (BOOL)allowsFullSizeImageDisplay;
- (void)setAllowsFullSizeImageDisplay:(BOOL)arg1;
- (void)_updateCameraViewGestures;
- (BOOL)allowsZoomingWhenCropping;
- (void)setAllowsZoomingWhenCropping:(BOOL)arg1;
- (int)allowedImageViewGestures;
- (BOOL)displayingPhotoPicker;
- (void)setDisplayingPhotoPicker:(BOOL)arg1;
- (BOOL)wantsThrowViewOnSave;
- (void)_updateCameraPhotoSavingOptions;
- (void)setWantsThrowViewOnSave:(BOOL)arg1;
- (BOOL)cropPhotoAfterSelection;
- (void)_updateLocationRunState;
- (void)activeStateChanged:(id)arg1;
- (void)setCropPhotoAfterSelection:(BOOL)arg1;
- (id)cropTitle;
- (id)cropSubtitle;
- (id)cropButtonTitle;
- (void)setCropTitle:(id)arg1 subtitle:(id)arg2 cropButtonTitle:(id)arg3;
- (void)photoWasCroppedToRect:(struct CGRect)arg1 fullSizeImageData:(id)arg2 fullScreenImageData:(id)arg3 croppedImageData:(id)arg4 imageView:(id)arg5;
- (void)imageWasSelected:(id)arg1;
- (int)_statusBarOrientationForDeviceOrientation:(int)arg1;
- (BOOL)showingCameraPreview;
- (BOOL)showCamera;
- (void)setShowCamera:(BOOL)arg1;
- (id)cameraButtonBar;
- (struct CGRect)fullScreenRect;
- (double)durationForTransition:(int)arg1;

@end

@interface PLPhotosNavigationItem : UINavigationItem
{
    int _barStyle;
}

- (int)barStyle;
- (void)setBarStyle:(int)arg1;

@end

@interface PLLibraryController : NSObject
{
    PLLibraryView *_libraryView;
    UITextField *_nameField;
}

- (void)dealloc;
- (void)storeCurrentConfiguration:(id)arg1;
- (void)loadCurrentConfiguration:(id)arg1;
- (void)reloadLibrary;
- (id)libraryView;

@end

@interface PLLibraryTableViewCell : UITableViewCell
{
    struct CGRect _posterImageRect;
    UIImage *_posterImage;
    UILabel *_titleTextLabel;
    UILabel *_countLabel;
    BOOL _textNeedsLayout;
}

- (id)initWithFrame:(struct CGRect)arg1 reuseIdentifier:(id)arg2;
- (void)dealloc;
- (void)layoutTextInBounds:(struct CGRect)arg1;
- (void)setPosterImage:(id)arg1;
- (void)setText:(id)arg1 photoCount:(int)arg2;
- (void)_drawContentInRect:(struct CGRect)arg1 selected:(BOOL)arg2;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface PLLibraryView : UIView <UITableViewDataSource, UITableViewDelegate>
{
    id _delegate;
    NSArray *_albums;
    UITableView *_tableView;
    PLEmptyAlbumView *_emptyLibraryView;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (void)cameraAlbumDidChange;
- (void)storeCurrentConfiguration:(id)arg1;
- (void)loadCurrentConfiguration:(id)arg1;
- (void)setAlbums:(id)arg1;
- (void)viewWillBeDisplayed;
- (void)updateButtonBar:(id)arg1 duration:(float)arg2;
- (id)tableView;
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (BOOL)_hasContent;
- (void)_updateInterface;
- (void)_pictureWasTaken:(id)arg1;
- (void)_pictureWasDeleted:(id)arg1;

@end

@interface PLPhotosButtonBar : UIToolbar
{
}

+ (id)backgroundImage;
+ (float)defaultHeight;
- (id)initInView:(id)arg1 withItems:(CDAnonymousStruct3 *)arg2 withCount:(int)arg3;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface PLCameraLockdownPTPCommunicator : NSObject
{
    struct __CFMessagePort *_port;
    int _msgid;
}

+ (id)sharedInstance;
- (BOOL)createPortIfNecessary;
- (void)releasePort;
- (void)sendData:(id)arg1;
- (void)notifyLockdownAboutFileGroup:(id)arg1 added:(BOOL)arg2;
- (void)addedFileGroup:(id)arg1;
- (void)addedPhotoFileGroup:(id)arg1;
- (void)addedVideoFileGroup:(id)arg1 withDuration:(id)arg2;
- (void)removedFileGroup:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface PLTrimNavigationButton : UINavigationButton
{
}

- (id)initWithTitle:(id)arg1;
- (void)setControlSize:(int)arg1;

@end

@interface PLAlbumsController : NSObject <PLAlbumScrollViewDelegate, PLImageScrollViewDelegate, PLVideoViewDelegate, UIScrollViewDelegate, UIToolbarDelegate, UIModalViewDelegate, UINavigationControllerDelegate, UIActionSheetDelegate>
{
    MLPhotoAlbum *_album;
    PLAlbumView *_albumView;
    struct __CFDictionary *_tileCache;
    PLAlbumScrollView *_scroller;
    PLPhotoScrollerViewController *_scrollerViewController;
    PLImageTileView *_tiledView;
    PLEmptyAlbumView *_emptyCameraView;
    struct __CFDictionary *_videoViewCache;
    UIView *_fadeToBlackView;
    UITransitionView *_slideshowTransitionView;
    UITransitionView *_cameraTransitionView;
    struct __CFArray *_imageIndexes;
    unsigned int _currentIndex;
    unsigned int _deletedIndex;
    unsigned int _previousIndex;
    int _deviceOrientation;
    int _nextOrientation;
    struct CGRect _savedScrollerFrame;
    UIView *_savedScrollerSuperview;
    struct CGAffineTransform _savedScrollerTransform;
    int _slideshowStatus;
    BOOL _tvOutOn;
    BOOL _playingVideo;
    BOOL _beingRotated;
    BOOL _ignoreGestures;
    BOOL _animating;
    int _directionToMoveAfterSmoothScrollCompletes;
    double _lastButtonClickTime;
    int _lastActionMenuButtonIndex;
    struct CGSize _contentStartSize;
    float _startScale;
    float _endScale;
    PLToolbar *_buttonBar;
    UIView *_buttonBarContainerView;
    UIModalView *_alertSheet;
    UIModalView *_popupAlert;
    UIActionSheet *_actionView;
    UIProgressHUD *_savingPhotoHud;
    double _slideshowDelay;
    BOOL _slideshowTransitionIsScheduled;
    unsigned int _previousSimpleRemotePriority;
    NSTimer *_toolbarTimer;
    NSTimer *_scrubTimer;
    BOOL _scrubbingTopSpeed;
    BOOL _scrubbingStarted;
    PLCropOverlay *_cropOverlay;
    SEL _emailPhotoAction;
    void *_person;
    PLMobileMeHelper *_mobileMeHelper;
    UIView *_fromView;
    UIView *_toView;
    int _imageScrollerLastSmoothScrollDirection;
    double _lastRubberbandScrollTime;
    UIWindow *_tvOutWindow;
    UIView *_tvOutContentView;
    PLAlbumScrollView *_tvOutScroller;
    PLImageTileView *_tvOutTiledView;
    struct __CFDictionary *_tvOutTileCache;
    UITransitionView *_tvOutTransitionView;
    UIView *_tvOutFromView;
    UIView *_tvOutToView;
    struct CGRect _animationFrame;
    UIView *_animationView;
    NSData *_emailData;
    id _attachmentIdentifier;
    id _previousLeftBarButtonItem;
    id _previousRightBarButtonItem;
    NSTimer *_progressUpdateTimer;
    PLProgressView *_progressView;
    PLPublishingAgent *_currentPublishingAgent;
    PLPublishingAgent *_publishingAgentToPresent;
    int _remakerMode;
    PLVideoRemaker *_remaker;
    MLPhoto *_currentVideo;
    SEL _completionSelector;
    UINavigationController *_mmsController;
    UIModalView *_videoTooLongAlertSheet;
    double _maximumTrimLength;
    UILongPressGestureRecognizer *_recognizer;
    int _statusBarMode;
    SEL _actionAfterForcedRotation;
    id <PLAlbumsControllerDelegate> _delegate;
    unsigned int _overlayIsHidden:1;
    unsigned int _didSetInitialInterfaceOrientation:1;
    unsigned int _statusBarIsLocked;
    unsigned int _rotationDisabled;
    unsigned int _rotationDisabledByZoom:1;
    unsigned int _videoEditingMode:1;
    unsigned int _remaking:1;
    unsigned int _transcoding:1;
    unsigned int _sendingViaMMS:1;
    unsigned int _passthroughTrimming:1;
    unsigned int _clearingFullScreenView:1;
    unsigned int _scrolling:1;
    unsigned int _canEditVideo:1;
    unsigned int _canShowCopyCallout:1;
    unsigned int _viewIsDisappearing:1;
    unsigned int _didRotate:1;
    unsigned int _navigationBarDisabled;
    unsigned int _bottomBarDisabled;
    unsigned int _appInteractionDisabled;
    unsigned int _didSetPhotoScrollerViewController:1;
}

- (void)_resetIndexArrayStartingWithIndex:(int)arg1 shuffleImages:(BOOL)arg2 keepPhotoAtStartingIndex:(BOOL)arg3;
- (void)_clearFullScreenView;
- (BOOL)_albumScrollerIsVisible;
- (id)_retainedImageViewForModelImage:(id)arg1;
- (id)_scrollerForImageView:(id)arg1 size:(struct CGSize)arg2;
- (id)_videoViewForVideoImage:(id)arg1;
- (void)_preloadImage:(id)arg1 albumImageIndex:(int)arg2 cache:(struct __CFDictionary *)arg3;
- (void)_preloadVideo:(id)arg1 albumImageIndex:(int)arg2 cache:(struct __CFDictionary *)arg3;
- (void)_preloadImage:(id)arg1 albumImageIndex:(int)arg2;
- (id)_videoViewForIndex:(int)arg1 image:(id)arg2 tileCache:(struct __CFDictionary *)arg3;
- (id)_imageScrollerForIndex:(int)arg1 image:(id)arg2 tileCache:(struct __CFDictionary *)arg3;
- (id)_imageScrollerForIndex:(int)arg1 image:(id)arg2;
- (int)_albumImageIndexForTileIndex:(int)arg1;
- (int)_currentIndexFromScrollPosition;
- (void)_configureScroller:(id *)arg1 tiledView:(id *)arg2;
- (void)_pictureWasTaken:(id)arg1;
- (void)_startSlideshow;
- (void)_cancelSlideshow;
- (void)_cancelToolbarTimer;
- (int)_allowedRotationGesture;
- (void)_setZoomAndRotationEnabled:(BOOL)arg1;
- (void)_clearTileCache;
- (id)_modelImageForIndex:(int)arg1;
- (void)cameraAlbumDidChange;
- (BOOL)_canEmailPhoto;
- (void)_capabilitiesChanged;
- (BOOL)_currentItemIsVideo;
- (BOOL)_currentItemIsPlaying;
- (id)_photoScrollerViewController;
- (id)_navigationController;
- (void)setRotationDisabled:(BOOL)arg1;
- (BOOL)isRotationEnabled;
- (id)init;
- (void)_dismissModalViewControllerAnimated:(BOOL)arg1;
- (void)dealloc;
- (void)_showOverlaysForResume;
- (void)applicationResumed:(id)arg1;
- (void)applicationSuspended:(id)arg1;
- (void)applicationWillBeginSuspendAnimation:(id)arg1;
- (void)_simpleRemoteActionDidOccur:(id)arg1;
- (void)storeCurrentConfiguration:(id)arg1;
- (void)loadCurrentConfiguration:(id)arg1;
- (void)setAlbumScrollerEnabled:(BOOL)arg1;
- (BOOL)isBeingRotated;
- (void)setBeingRotated:(BOOL)arg1;
- (id)album;
- (void)setAlbum:(id)arg1;
- (id)albumScroller;
- (void)animateToIndex;
- (double)durationForTransition:(int)arg1;
- (void)transitionViewDidComplete:(id)arg1 fromView:(id)arg2 toView:(id)arg3;
- (void)viewWillAppear;
- (void)viewDidAppear;
- (void)viewWillDisappear;
- (void)playSlideshow;
- (void)setAppInteractionDisabled:(BOOL)arg1;
- (void)_fadeIn;
- (void)fadeInAnimation:(id)arg1 finished:(id)arg2;
- (void)_cleanseCache:(struct __CFDictionary **)arg1 currentAlbumImageIndex:(int)arg2;
- (void)_updateTVOutOffset;
- (void)_stopVideoPlaybackForIndex:(int)arg1;
- (void)updateBeforeTransition;
- (void)updateAfterAnimation;
- (void)setCurrentImage:(id)arg1;
- (id)currentImage;
- (void)setCurrentImageIndex:(unsigned int)arg1;
- (unsigned int)currentImageIndex;
- (BOOL)canShowNextImage:(BOOL)arg1;
- (BOOL)canShowNextImage;
- (BOOL)canShowPreviousImage;
- (id)nextImage;
- (id)previousImage;
- (void)_transitionToImage:(id)arg1 fromOldIndex:(int)arg2 toNewIndex:(int)arg3 transition:(int)arg4 transitionView:(id)arg5;
- (void)_transitionToImage:(id)arg1 fromOldIndex:(int)arg2 toNewIndex:(int)arg3 transition:(int)arg4;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)_runLKTransition:(id)arg1 transitionView:(id)arg2 fromView:(id)arg3 toView:(id)arg4;
- (void)_runLKTransition:(id)arg1;
- (void)showNextImageWithTransition:(int)arg1;
- (void)showPreviousImageWithTransition:(int)arg1;
- (void)finishDelete;
- (void)prepareDeleteImageWithNextSlide;
- (void)prepareDeleteImagePreviousSlide;
- (void)openTrash;
- (void)didFinishSuckingToTrash:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)suckToTrash:(id)arg1 transitionParent:(id)arg2;
- (void)prepareForSucking;
- (void)deleteCurrentImage;
- (void)buttonBar:(id)arg1 didFinishAnimation:(int)arg2 forButton:(int)arg3;
- (void)_flushTileCache;
- (void)_removeTileCacheEntryForAlbumImageIndex:(int)arg1;
- (void)_updateRotationView:(id)arg1 itemView:(id)arg2;
- (void)tileView:(id)arg1 createdTile:(id)arg2;
- (void)tileWasRemoved:(id)arg1;
- (void)tileWillBeDisplayed:(id)arg1;
- (void)albumScrollerDidEndSmoothScroll;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)albumScrollerWillStartTrackingMouse:(id)arg1;
- (void)albumScrollerFinishedScroll:(id)arg1;
- (void)albumScrollerCanceledScroll:(id)arg1;
- (int)deviceOrientationForTrackingInScroller:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)handleSingleTap:(struct __GSEvent *)arg1;
- (void)handleDoubleTap:(struct __GSEvent *)arg1;
- (id)imageScrollerSiblingForDirection:(int)arg1;
- (BOOL)videoViewShouldPlayImmediately:(id)arg1;
- (BOOL)videoViewShouldDisplayScrubber:(id)arg1;
- (BOOL)videoViewShouldRemoveFromViewHierarchy:(id)arg1;
- (void)setNavigationBarDisabled:(BOOL)arg1;
- (void)setBottomBarDisabled:(BOOL)arg1;
- (BOOL)videoViewCanBeginPlayback:(id)arg1;
- (void)videoViewDidBeginPlayback:(id)arg1;
- (void)videoViewDidPausePlayback:(id)arg1;
- (void)videoViewDidEndPlayback:(id)arg1 didFinish:(BOOL)arg2;
- (void)videoViewDidBeginScrubbing:(id)arg1;
- (void)videoViewDidEndScrubbing:(id)arg1;
- (void)videoViewDidBeginEditing:(id)arg1;
- (BOOL)videoViewShouldDisplayOverlay:(id)arg1;
- (BOOL)videoViewCanFlushOnViewRemoval:(id)arg1;
- (BOOL)videoViewCanCreateMetadata:(id)arg1;
- (void)view:(id)arg1 handleTapWithCount:(int)arg2 event:(struct __GSEvent *)arg3 fingerCount:(int)arg4;
- (float)_rotationDegreesForDeviceRotation:(int)arg1;
- (float)_rotationDegreesToAchieveDeviceRotation:(int)arg1;
- (void)_rotatePhotoContentToOrientation:(int)arg1 duration:(float)arg2;
- (void)setInterfaceOrientation:(int)arg1;
- (void)_configureScrollerOrientation;
- (void)willStartGesturesInView:(id)arg1 forEvent:(struct __GSEvent *)arg2;
- (void)_gestureView:(id)arg1 imageScroller:(id *)arg2 imageTile:(id *)arg3 rotationView:(id *)arg4 item:(id *)arg5;
- (void)willStartGesture:(int)arg1 inView:(id)arg2 forEvent:(struct __GSEvent *)arg3;
- (void)willRotateToInterfaceOrientation:(int)arg1 fromInterfaceOrientation:(int)arg2 duration:(double)arg3;
- (int)_deviceOrientationAfterRotatingByDegrees:(float)arg1;
- (void)didRotateFromInterfaceOrientation:(int)arg1;
- (void)didFinishGesture:(int)arg1 inView:(id)arg2 forEvent:(struct __GSEvent *)arg3;
- (void)imageViewWillSwitchToFullSizeImage:(id)arg1;
- (void)imageViewDidSwitchToFullSizeImage:(id)arg1;
- (BOOL)imageViewIsDisplayingLandscape:(id)arg1;
- (void)_cancelScrubTimer;
- (void)_resetScrubTimerForDirection:(int)arg1;
- (void)_scrubTimerFired:(id)arg1;
- (void)_stopScrubbing:(id)arg1;
- (void)_handleDirectionButtonMouseDown:(id)arg1 direction:(int)arg2;
- (void)mouseDownInLeftButton:(id)arg1;
- (void)mouseDownInRightButton:(id)arg1;
- (void)_showCropOverlayWithTitle:(id)arg1 subtitle:(id)arg2 cropButtonTitle:(id)arg3;
- (void)_dismissCropOverlay;
- (void)_backgroundSavePhoto:(id)arg1;
- (void)_savePhoto;
- (void)_savePhotoFinished:(id)arg1;
- (void)cropOverlayWasCancelled:(id)arg1;
- (void)cropOverlayWasOKed:(id)arg1;
- (void)_reallyDismissActionMenuAnimated:(BOOL)arg1;
- (void)_reallyDismissActionMenu;
- (void)_dismissActionMenuAndShowButtonBar:(BOOL)arg1;
- (void)_reallyShowPeoplePicker;
- (void)_showPeoplePicker;
- (void)_setPersonForCropOverlay:(void *)arg1;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (BOOL)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (BOOL)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (BOOL)_shouldRespondToButtonBarButtons;
- (void)playSlideshowClicked:(id)arg1;
- (void)deleteImageClicked:(id)arg1;
- (void)actionButtonClicked:(id)arg1;
- (int)_transitionForButtonClickInDirection:(int)arg1;
- (void)leftButtonClicked:(id)arg1;
- (void)rightButtonClicked:(id)arg1;
- (void)cancelButtonClicked:(id)arg1;
- (void)_sendPhotoUsingSelector:(SEL)arg1 delay:(float)arg2;
- (void)_showMobileMeErrorWithTitle:(id)arg1 body:(id)arg2;
- (struct CGRect)_animationDestinationRectForImageSize:(struct CGSize)arg1;
- (void)_reallySendViaEmail:(id)arg1;
- (void)_showMailComposition:(id)arg1 transcodedVideoPath:(id)arg2;
- (void)_animateSendToEmail;
- (void)_emailAnimationFinished;
- (void)composeSheetDidAppear;
- (void)_finishedSlidingDownImage:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_delayedTranscodeForEmail;
- (double)_durationForCurrentVideo;
- (void)_performSendViaEmail;
- (void)didDismissAlertSheet:(id)arg1;
- (void)sendViaEmailClicked;
- (void)_cameraImageIsReady:(id)arg1;
- (void)assignToContactClicked;
- (void)_performSetWallpaper;
- (void)useAsScreenSaverClicked;
- (void)_showCompositionForPublishingBundleNamed:(id)arg1 transcodedVideoPath:(id)arg2;
- (void)_publishToMobileMe;
- (void)_publishToYouTube;
- (void)_showRemakerProgressView;
- (void)_transcodeVideoUsingMode:(int)arg1 completionSelector:(SEL)arg2;
- (void)_publishToMobileMeClicked;
- (void)_publishToYouTubeClicked;
- (void)_showMobileMeComposition:(id)arg1 transcodedVideoPath:(id)arg2;
- (void)_showYouTubeComposition:(id)arg1 transcodedVideoPath:(id)arg2;
- (void)publishToMobileMeClicked;
- (void)publishToYouTubeClicked;
- (void)_showVideoTooLongAlert;
- (void)_enterVideoEditingMode;
- (void)_videoTooLongAlertWasDismissedWithButtonIndex:(unsigned int)arg1;
- (void)_showMMSComposeSheet;
- (void)videoRemakerDidBeginRemaking:(id)arg1;
- (void)_remakerDidFinish:(id)arg1;
- (void)videoRemakerDidEndRemaking:(id)arg1 temporaryPath:(id)arg2;
- (void)sendViaMMSClicked;
- (void)smsComposeControllerDataInserted:(id)arg1;
- (void)smsComposeControllerCancelled:(id)arg1;
- (void)smsComposeControllerSendStarted:(id)arg1;
- (BOOL)canEditVideo;
- (void)setCanEditVideo:(BOOL)arg1;
- (void)setVideoEditingMode:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setVideoEditingMode:(BOOL)arg1;
- (BOOL)videoEditingMode;
- (void)_cancelVideoEditingMode:(id)arg1;
- (void)_delayedExitEditingMode;
- (void)_showConfirmationForPassthroughTrimming;
- (void)_passthroughTrimWasConfirmed:(id)arg1;
- (void)_trimVideo:(id)arg1;
- (void)videoViewDidBeginRemaking:(id)arg1;
- (void)videoViewDidEndRemaking:(id)arg1 temporaryPath:(id)arg2;
- (void)videoView:(id)arg1 remakingProgressDidChange:(float)arg2;
- (id)scrubOverlayTitle;
- (void)_showButtonGroup:(int)arg1 withDuration:(int)arg2;
- (void)updateButtonBar;
- (void)_cancelProgressTimer;
- (void)_removeProgressView;
- (void)_publishingAgentDidFinishPublishing:(id)arg1;
- (void)_publishingAgentDidStartPublishing:(id)arg1;
- (void)_updateProgressView;
- (void)updateProgressView;
- (void)updateOverlays;
- (id)buttonBar;
- (id)buttonBarContainerView;
- (void)_resetToolbarTimer:(float)arg1;
- (void)resetToolbarTimer;
- (void)delayToolbarFade;
- (void)setStatusBarIsLocked:(BOOL)arg1;
- (BOOL)statusBarIsLocked;
- (void)showOverlaysWithDuration:(float)arg1;
- (void)hideOverlays;
- (void)hideOverlaysWithDuration:(float)arg1 hideStatusBar:(BOOL)arg2;
- (int)statusBarMode;
- (void)_presentAlertSheetWithTitle:(id)arg1 buttonTitles:(id)arg2 defaultButtonIndex:(int)arg3 redButtonIndex:(int)arg4 context:(id)arg5;
- (void)_dismissAlertSheet;
- (void)alertSheet:(id)arg1 buttonClicked:(int)arg2;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(int)arg2;
- (void)_prepareForTVOut;
- (void)_removeTVOutWindow;
- (void)startSlideShow;
- (void)stopPlaying;
- (void)_playTimerFired;
- (void)togglePlay;
- (BOOL)canShowCopyCallout;
- (void)setCanShowCopyCallout:(BOOL)arg1;
- (void)albumScrollerCopy:(id)arg1;
- (BOOL)albumScrollerCanCopy:(id)arg1;
- (void)_longPressRecognized:(id)arg1;
- (void)_autohideCopyCallout;
- (id)delegate;
- (void)setDelegate:(id)arg1;

@end

@interface PLPhotoToolbar : PLToolbar
{
    int _photosCurrentButtonGroup;
}

- (void)setFrame:(struct CGRect)arg1;
- (float)originXDeltaForButtonTag:(int)arg1;
- (void)positionButtons:(id)arg1 tags:(int *)arg2 count:(int)arg3 group:(int)arg4;
- (void)showButtonGroup:(int)arg1 withDuration:(double)arg2;

@end

@interface PLTransitionContainerView : UIView
{
    PLImageScrollView *_scroller;
}

- (id)scroller;
- (void)setRotationView:(id)arg1 scroller:(id)arg2;

@end

@interface PLPortraitAlertSheet : UIModalView
{
}

- (BOOL)requiresPortraitOrientation;

@end

@interface PLCameraAlbum : MLPhotoAlbum
{
    MLPhotoDCIMDirectory *_dcimDirectory;
    NSMutableArray *_pendingImages;
    BOOL _albumDidChange;
    BOOL _ignoreNotifications;
}

+ (id)sharedInstance;
+ (id)sharedInstanceIfExists;
+ (void)clearSharedInstance;
+ (void)savePreviewWellImage:(id)arg1;
+ (void)deletePreviewWellImage;
+ (id)previewWellImage;
+ (BOOL)previewWellImageExists;
- (id)init;
- (void)dealloc;
- (void)dcimContentsDidChange;
- (void)setIgnoreAlbumChangeNotifications:(BOOL)arg1;
- (id)name;
- (id)images;
- (int)count;
- (id)_regeneratePosterImageAtPath:(id)arg1;
- (id)posterImage;
- (void)_addImage:(id)arg1;
- (BOOL)_addImage:(id)arg1 withPreview:(id)arg2 type:(struct __CFString *)arg3 extension:(id)arg4 exifProperties:(id)arg5 date:(id)arg6 imageData:(struct __CFData *)arg7 notifyingTarget:(id)arg8 selector:(SEL)arg9 contextInfo:(void *)arg10 sendPath:(BOOL)arg11;
- (BOOL)addImage:(id)arg1 withPreview:(id)arg2 exifProperties:(id)arg3 date:(id)arg4 jpegData:(struct __CFData *)arg5 notifyingTarget:(id)arg6 selector:(SEL)arg7 contextInfo:(void *)arg8;
- (BOOL)addImage:(id)arg1 withPreview:(id)arg2 type:(struct __CFString *)arg3 extension:(id)arg4 exifProperties:(id)arg5 date:(id)arg6 imageData:(struct __CFData *)arg7 notifyingTarget:(id)arg8 selector:(SEL)arg9 contextInfo:(void *)arg10;
- (BOOL)addImage:(id)arg1 withPreview:(id)arg2 exifProperties:(id)arg3 date:(id)arg4 jpegData:(struct __CFData *)arg5 notifyingTargetWithPath:(id)arg6 selector:(SEL)arg7;
- (BOOL)processVideoInFileGroup:(id)arg1 metadata:(id)arg2 thumbnailImage:(id)arg3 progressStack:(CDAnonymousStruct1 *)arg4 target:(id)arg5 completionSelector:(SEL)arg6;
- (BOOL)processVideoInFileGroup:(id)arg1 metadata:(id)arg2 thumbnailImage:(id)arg3;
- (void)addVideoAtPath:(id)arg1 createCopy:(BOOL)arg2 notifyingTarget:(id)arg3 selector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)deleteImageAtIndex:(int)arg1;
- (void)cameraImageFinishedSaving:(id)arg1;
- (id)nextAvailableVideoFileGroup;

@end

@interface PLCameraImage : MLPhoto
{
    MLPhotoDCFFileGroup *_fileGroup;
    UIImage *_thumbnailImage;
    double _duration;
    BOOL _hasJPEGData;
    unsigned int _didSetHasJPEGData:1;
    unsigned int _didSetDuration:1;
}

+ (void)setMaxImageSize:(int)arg1;
+ (int)imageIDForFileGroup:(id)arg1;
- (id)initWithDCFFileGroup:(id)arg1;
- (void)checkForVideoFile;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (id)fileGroup;
- (void)fileGroupWillBeginSaving:(id)arg1;
- (void)fileGroupDidFinishSaving:(id)arg1 jobType:(id)arg2;
- (int)compare:(id)arg1;
- (BOOL)isAudio;
- (BOOL)hasFullSizeJPEGData;
- (id)fullSizeJPEGPath;
- (id)description;
- (void)setThumbnailImage:(id)arg1;
- (id)thumbnailImage;
- (id)title;
- (struct CGImage *)_createCGImageForFormat:(int)arg1 orientation:(int *)arg2 ignoringSizeCaps:(BOOL)arg3 properties:(const struct __CFDictionary **)arg4;
- (struct CGImage *)createFullScreenCGImageRef:(int *)arg1 properties:(const struct __CFDictionary **)arg2;
- (struct CGImage *)createFullSizeCGImageRef:(int *)arg1;
- (struct CGImage *)createFullSizeCGImageRefForImagePickerClient:(int *)arg1;
- (struct CGImage *)createLowResolutionFullScreenCGImageRef;
- (BOOL)hasFullSizeImage;
- (void)deleteFiles;
- (double)duration;
- (id)pathForVideoFile;
- (BOOL)isWritePending;
- (void)setWriteIsPending:(BOOL)arg1;
- (id)pathForVideoPreviewFile;
- (void)addExtension:(id)arg1;
- (void)setDate:(id)arg1;
- (id)pathForPrebakedLandscapeScrubberThumbnails;
- (id)pathForPrebakedPortraitScrubberThumbnails;
- (id)pathForTrimmedVideoFile;
- (id)posterImagePath;
- (id)pathForThumbnailFile;
- (id)pathForPrebakedThumbnail;
- (id)pathForFullSizeImage;

@end

@interface PLCameraView : UIView <PLCameraControllerDelegate, PLVideoViewDelegate>
{
    UIToolbar *_cameraButtonBar;
    int _availablePictureCount;
    int _captureOrientation;
    int _photoSavingOptions;
    BOOL _manipulatingCrop;
    NSDictionary *_videoMetadata;
    MLPhotoDCFFileGroup *_videoFileGroup;
    PLCameraController *_cameraController;
    PLCameraElapsedTimeView *_timeView;
    PLPreviewView *_previewView;
    UIView *_animatedCaptureView;
    float _bounceAspectRatio;
    struct CGRect _bounceDestinationFrame;
    UIView *_irisView;
    UIView *_staticIrisView;
    UIImageView *_shadowView;
    UIImage *_previewWellImage;
    UIImage *_temporaryThumbnailImage;
    BOOL _irisIsClosed;
    SEL _openIrisAnimationFinishedSelector;
    SEL _closeIrisAnimationFinishedSelector;
    PLCropOverlay *_cropOverlay;
    PLImageTile *_imageTile;
    PLVideoView *_videoView;
    NSDictionary *_imagePickerOptions;
    id _delegate;
    int _enabledGestures;
    unsigned int _showsCropOverlay:1;
    unsigned int _allowsEditing:1;
    unsigned int _changesStatusBar:1;
    unsigned int _cropOverlayUsesTelephonyUI:1;
    unsigned int _showsCropRegion:1;
    unsigned int _controlsAreVisible:1;
    unsigned int _allowsMultipleModes:1;
    unsigned int _capturePhotoWhenFocusFinished:1;
    unsigned int _dontAnimateVideoPreviewDown:1;
    unsigned int _processVideoAfterBounceAnimation:1;
    unsigned int _capturingPhoto:1;
    NSString *_cropTitle;
    NSString *_cropButtonTitle;
    NSData *_lastCapturedImageData;
    unsigned int _imagePickerWantsImageData:1;
}

- (void)_playShutterSound;
- (void)_updateStatusBar;
- (void)setManipulatingCrop:(BOOL)arg1;
- (void)cameraControllerReadyStateChanged:(id)arg1;
- (void)_checkDiskSpaceAfterCapture;
- (BOOL)_canEditVideo;
- (void)_previewVideoAtPath:(id)arg1;
- (void)_processCapturedVideo;
- (void)_videoCaptureCompleted:(id)arg1;
- (void)cameraController:(id)arg1 tookPicture:(id)arg2 withPreview:(id)arg3 jpegData:(struct __CFData *)arg4 imageProperties:(id)arg5;
- (void)_preparePreviewWellImage:(struct CGImage *)arg1 isVideo:(BOOL)arg2;
- (void)setupAnimateCameraPreviewDown:(id)arg1;
- (void)setupAnimateVideoPreviewDown:(void *)arg1;
- (void)animateCameraPreviewDown;
- (void)_animateFinalBounce;
- (void)_bounceAnimationFinished;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)_setShadowViewVisible:(BOOL)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (void)setEnabledGestures:(int)arg1;
- (void)setPhotoSavingOptions:(int)arg1;
- (int)photoSavingOptions;
- (void)_updateImageEditability;
- (void)setImagePickerOptions:(id)arg1;
- (void)setAllowsImageEditing:(BOOL)arg1;
- (void)setChangesStatusBar:(BOOL)arg1;
- (void)setShowsCropOverlay:(BOOL)arg1;
- (void)setCropOverlayUsesTelephonyUI:(BOOL)arg1;
- (void)setShowsCropRegion:(BOOL)arg1;
- (void)setCropTitle:(id)arg1 buttonTitle:(id)arg2;
- (void)setImagePickerWantsImageData:(BOOL)arg1;
- (void)setCameraButtonBar:(id)arg1;
- (id)buttonBar;
- (id)_bottomBar;
- (id)_modeSwitch;
- (id)_shutterButton;
- (void)setCameraMode:(int)arg1;
- (void)setAllowsMultipleCameraModes:(BOOL)arg1;
- (id)imageTile;
- (void)_inCallStatusChanged:(id)arg1;
- (void)_applicationResumed;
- (void)takePictureOpenIrisAnimationFinished;
- (void)takePictureCloseIrisAnimationFinished;
- (int)_getCaptureOrientation;
- (void)_shutterButtonClicked;
- (void)cameraControllerFocusFinished:(id)arg1;
- (void)timeLapseTimerFired;
- (id)_newVideoFileGroup;
- (void)_deleteVideoFileGroup;
- (void)cameraShutterClicked:(id)arg1;
- (void)_performVideoCapture;
- (void)_videoSwitchValueDidChange:(id)arg1;
- (void)cameraController:(id)arg1 modeDidChange:(int)arg2;
- (void)cameraControllerVideoCaptureDidStart:(id)arg1;
- (void)cameraControllerVideoCaptureDidStop:(id)arg1;
- (void)_simpleRemoteActionDidOccur:(id)arg1;
- (void)_updateModeSwitchVisibility;
- (id)_cropOverlay;
- (void)viewWillBeDisplayed;
- (void)startPreview;
- (void)viewDidAppear;
- (void)viewWillBeRemoved;
- (void)_removeVideoCaptureFileAtPath:(id)arg1;
- (void)cropOverlayWasCancelled:(id)arg1;
- (void)cropOverlayWasOKed:(id)arg1;
- (void)cropOverlayPlay:(id)arg1;
- (void)cropOverlayPause:(id)arg1;
- (void)cropOverlay:(id)arg1 didFinishSaving:(id)arg2;
- (BOOL)imageViewIsDisplayingLandscape:(id)arg1;
- (void)willStartGesture:(int)arg1 inView:(id)arg2 forEvent:(struct __GSEvent *)arg3;
- (void)tearDownIris;
- (void)primeStaticClosedIris;
- (void)showStaticClosedIris;
- (void)hideStaticClosedIris;
- (BOOL)irisIsClosed;
- (void)_closeIrisAnimationFinished;
- (void)closeIris:(BOOL)arg1 didFinishSelector:(SEL)arg2;
- (void)_openIrisAnimationFinished;
- (void)openIrisWithDidFinishSelector:(SEL)arg1;
- (void)openIrisAnimationFinished;
- (void)closeIrisAnimationFinished;
- (void)animateIrisForSuspension;
- (BOOL)videoViewShouldDisplayScrubber:(id)arg1;
- (BOOL)videoViewShouldDisplayOverlay:(id)arg1;
- (float)videoViewScrubberYOrigin:(id)arg1;
- (BOOL)videoViewCanBeginPlayback:(id)arg1;
- (void)videoViewIsReadyToBeginPlayback:(id)arg1;
- (void)videoViewDidBeginPlayback:(id)arg1;
- (void)videoViewDidPausePlayback:(id)arg1;
- (void)videoViewDidEndPlayback:(id)arg1 didFinish:(BOOL)arg2;
- (void)setControlsAreVisible:(BOOL)arg1;
- (BOOL)controlsAreVisible;
- (void)setPreviewViewTransform:(struct CGAffineTransform)arg1;
- (id)overlayView;
- (void)setOverlayView:(id)arg1;
- (void)pressShutterButton;
- (BOOL)isCameraReady;
- (id)_scriptingInfo;

@end

@interface PLStoreAnimationView : UIView
{
    UIImageView *_imageView;
}

- (id)imageView;
- (id)initWithFrame:(struct CGRect)arg1 image:(id)arg2;
- (void)dealloc;

@end

@interface PLHighlightingTableView : UITableView
{
}

- (BOOL)_shouldHighlightInsteadOfSelectRowAtIndexPath:(id)arg1;

@end

@interface PLImageCountCell : UITableViewCell
{
    UILabel *_titleLabel;
}

- (void)setTitleText:(id)arg1;
- (void)setTextAlignment:(int)arg1;

@end

@interface PLAlbumView : UIView <UITableViewDataSource, UITableViewDelegate>
{
    MLPhotoAlbum *_album;
    int _filter;
    UITableView *_indexTableView;
    UIToolbar *_toolbar;
    unsigned int _gridHeight;
    struct CGSize _cellSize;
    BOOL _showImageCount;
    id _delegate;
    PLThumbnailTableCell *_highlightedCell;
    PLImageCountCell *_imageCountCell;
    PLEmptyAlbumView *_emptyAlbumView;
    BOOL _forceTableReload;
    BOOL _pictureWasTakenSinceLastReload;
    BOOL _isCameraAlbum;
    BOOL _didScrollToBottom;
    struct UIEdgeInsets _lastTableContentInset;
    unsigned int _multipleSelectionEnabled:1;
    NSMutableArray *_selectedPhotos;
    struct __CFDictionary *_selectedPhotoIndexesByRow;
    unsigned int _canShowCopyCallout:1;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableCellSelectionStateDidChange:(id)arg1 photo:(id)arg2 wasSelected:(BOOL)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (float)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableCellCopyCalloutWillDisappear:(id)arg1;
- (void)tableCell:(id)arg1 requestsDeletionOfPhotoAtIndex:(unsigned int)arg2;
- (void)storeCurrentConfiguration:(id)arg1;
- (void)loadCurrentConfiguration:(id)arg1;
- (id)album;
- (void)setAlbum:(id)arg1;
- (int)filter;
- (void)setFilter:(int)arg1;
- (id)toolbar;
- (void)setToolbar:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)reloadIndexTable;
- (id)indexTable;
- (void)clearSelection;
- (void)scrollRowToVisible:(int)arg1;
- (void)viewWillBeDisplayed;
- (id)indexTableView;
- (void)setCanShowCopyCallout:(BOOL)arg1;
- (BOOL)canShowCopyCallout;
- (void)setMultipleSelectionEnabled:(BOOL)arg1;
- (BOOL)multipleSelectionEnabled;
- (id)selectedPhotos;
- (void)_scrollToBottom;
- (void)_setupIndexTable;
- (unsigned int)_calculateGridHeightForAlbum:(id)arg1;
- (struct CGSize)_indexCellSizeForAlbum:(id)arg1;
- (id)_imageCountCell;
- (void)_albumContentsDidChange:(id)arg1;
- (void)_cameraAlbumDidChange:(id)arg1;
- (void)_updateToolbar;

@end

@interface PLThumbnailTableCell : UITableViewCell
{
    NSMutableArray *_slideImages;
    struct CGImage *_cgImage;
    UITouch *_touchForTracking;
    NSIndexSet *_highlightedIndexesBeforeTracking;
    NSMutableIndexSet *_highlightedIndexes;
    NSMutableArray *_highlightedViews;
    int _thumbnailSelectionStyle;
    UILongPressGestureRecognizer *_recognizer;
    unsigned int _canShowCopyCallout:1;
    unsigned int _canShowCutCallout:1;
    unsigned int _couldShowCopyCallout:1;
    id <PLThumbnailTableCellDelegate> _delegate;
}

- (id)initWithFrame:(struct CGRect)arg1 reuseIdentifier:(id)arg2;
- (void)dealloc;
- (id)photos;
- (void)setSelectedPhotoIndexes:(id)arg1;
- (id)selectedPhotoIndexes;
- (id)selectedPhoto;
- (id)selectedPhotos;
- (id)slideImageAtIndex:(unsigned int)arg1;
- (void)setSlideImage:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setImageRef:(struct CGImage *)arg1;
- (int)thumbnailSelectionStyle;
- (void)setThumbnailSelectionStyle:(int)arg1;
- (void)setCanShowCopyCallout:(BOOL)arg1;
- (BOOL)canShowCopyCallout;
- (void)setCanShowCutCallout:(BOOL)arg1;
- (BOOL)canShowCutCallout;
- (void)_selectionChanged:(id)arg1 wasSelected:(BOOL)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (BOOL)_canDrawContent;
- (void)setBackgroundColor:(id)arg1;
- (void)prepareForReuse;
- (void)setSelected:(BOOL)arg1 animated:(BOOL)arg2;
- (void)addItemsToPasteboard;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)_deselectAllImages;
- (void)_setSelected:(BOOL)arg1;
- (int)_indexAtPoint:(struct CGPoint)arg1;
- (id)_updateSelectedColumnAtPoint:(struct CGPoint)arg1 didSelectPhoto:(char *)arg2;
- (BOOL)_isMultipleSelectionEnabled;
- (BOOL)canBecomeFirstResponder;
- (void)_longPressRecognized:(id)arg1;
- (void)_hideCopyCallout;
- (id)delegate;
- (void)setDelegate:(id)arg1;

@end

@interface PLImageViewTile : UITile
{
}

- (void)_adjustContents;
- (BOOL)_canDrawContent;
- (void)movedToSuperview:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;

@end

@interface PLImageView : UITiledView <PLItemView>
{
    id _delegate;
    id _orientationDelegate;
    struct CGImage *_fullSizeImageRef;
    struct CGImage *_thumbnailImageRef;
    struct CGImage *_contentsImageRef;
    struct CGAffineTransform _contentsTransform;
    struct CGAffineTransform _imageTransform;
    int _imageOrientation;
    int _orientationWhenLastDisplayed;
    struct CGSize _fullSize;
    MLPhoto *_modelImage;
    BOOL _setOriginDuringAnimation;
    float _startScale;
    float _endScale;
    struct CGSize _endContentSize;
    struct CGSize _startContentSize;
    float _zoomProgress;
    BOOL _zoomToFillInsteadOfToFit;
    BOOL _useLessThanMinZoomForZoomedOutTest;
    BOOL _allowZoomToFill;
    float _imageViewZoomScale;
    double _lastTouchEventTimestamp;
}

+ (Class)tileClass;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct CGRect)visibleRect;
- (void)setDelegate:(id)arg1;
- (void)setOrientationDelegate:(id)arg1;
- (void)dealloc;
- (void)_setOriginForContentSize:(struct CGSize)arg1;
- (void)centerInScrollerIfNeeded;
- (void)_setImageViewZoomScale:(float)arg1;
- (void)_setZoomScale:(float)arg1 duration:(double)arg2;
- (struct CGPoint)setZoomScaleWithoutZoomGesture:(float)arg1;
- (int)orientationWhenLastDisplayed;
- (void)setOrientationWhenLastDisplayed:(int)arg1;
- (struct CGSize)_scrollerContentSize;
- (void)zoomToScale:(float)arg1;
- (void)animator:(id)arg1 stopAnimation:(id)arg2;
- (void)_prepareForAnimatedZoomToScale:(float)arg1 animated:(BOOL)arg2;
- (void)_zoomToScrollPoint:(struct CGPoint)arg1 scale:(float)arg2 duration:(float)arg3 event:(struct __GSEvent *)arg4;
- (struct CGImage *)imageRef;
- (int)imageOrientation;
- (BOOL)_canDrawContent;
- (BOOL)hasFullSizeImage;
- (void)ensureFullSizeImageLoaded;
- (void)setAllowsZoomToFill:(BOOL)arg1;
- (void)updateZoomScales;
- (int)defaultZoomStyle;
- (BOOL)_getContentsTransform:(struct CGAffineTransform *)arg1 contentsGravity:(id *)arg2 forSize:(struct CGSize)arg3;
- (struct CGRect)_visibleRect;
- (void)_updateLayerContents;
- (struct CGImage *)_createLayerContentsForTileFrame:(struct CGRect)arg1 contentsTransform:(struct CGAffineTransform *)arg2 contentsGravity:(id *)arg3;
- (void)setFullSizeImageRef:(struct CGImage *)arg1 orientation:(int)arg2;
- (void)_finishedLoadingImageRef:(id)arg1;
- (void)setTilingEnabled:(BOOL)arg1;
- (void)movedFromSuperview:(id)arg1;
- (float)minRotatedScale;
- (float)_calculateZoomScale:(BOOL)arg1;
- (float)minZoomScale;
- (float)zoomToFillScale;
- (float)defaultZoomScale;
- (void)setThumbnail:(struct CGImage *)arg1;
- (BOOL)isZoomedOut;
- (id)modelImage;
- (void)setModelImage:(id)arg1;
- (id)description;
- (void)_gestureChanged:(int)arg1 event:(struct __GSEvent *)arg2;
- (BOOL)_alwaysHandleScrollerMouseEvent;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)mouseDown:(struct __GSEvent *)arg1;
- (void)mouseUp:(struct __GSEvent *)arg1;
- (void)mouseDragged:(struct __GSEvent *)arg1;
- (float)_zoomScale;
- (float)_minimumZoomScaleDelta;
- (void)zoomToWindowPoint:(struct CGPoint)arg1 scale:(float)arg2 duration:(float)arg3 constrainScrollPoint:(BOOL)arg4 event:(struct __GSEvent *)arg5;

@end

@interface PLRotationView : UIView
{
}

@end

@interface PLTVOutImageTileView : PLImageTileView
{
}

+ (Class)tileClass;
+ (int)tileWidth;
+ (void)setTileSize:(struct CGSize)arg1;
- (struct CGSize)imageSize;

@end

@interface PLImageTileView : UITiledView
{
    id _delegate;
    unsigned int _notifyTapDelegate:1;
}

+ (Class)tileClass;
+ (int)tileWidth;
+ (void)setTileSize:(struct CGSize)arg1;
- (id)initWithSize:(struct CGSize)arg1;
- (struct CGSize)imageSize;
- (void)setDelegate:(id)arg1;
- (id)_createTileWithFrame:(struct CGRect)arg1;
- (struct CGRect)visibleRect;
- (BOOL)tilesNeedDisplay;
- (void)dealloc;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)mouseDown:(struct __GSEvent *)arg1;
- (void)mouseUp:(struct __GSEvent *)arg1;
- (void)mouseDragged:(struct __GSEvent *)arg1;

@end

@interface PLTVOutImageTile : PLImageTile
{
}

+ (Class)tileViewClass;
- (struct CGRect)imageRect;

@end

@interface PLImageTile : UITile
{
    UITiledView *_tiledView;
    PLRotationView *_rotationView;
    PLImageScrollView *_imageScroller;
    PLVideoView *_videoView;
    int _index;
}

+ (Class)tileViewClass;
+ (id)_createImageTileWithFrame:(struct CGRect)arg1 imageSize:(struct CGSize)arg2 allowZoomToFill:(BOOL)arg3;
+ (id)createImageTileWithFrame:(struct CGRect)arg1 image:(struct CGImage *)arg2 orientation:(int)arg3 allowZoomToFill:(BOOL)arg4;
+ (id)createImageTileWithFrame:(struct CGRect)arg1 modelImage:(id)arg2;
- (void)setEnabledGestures:(int)arg1;
- (void)_cleanupVideoView;
- (void)_cleanupImageScroller;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)setFrame:(struct CGRect)arg1;
- (BOOL)_drawsContent;
- (BOOL)_canDrawContent;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)imageRect;
- (int)imageIndex;
- (id)rotationView;
- (id)imageScroller;
- (void)setImageScroller:(id)arg1;
- (id)videoView;
- (void)setVideoView:(id)arg1;
- (id)tiledView;
- (void)setTiledView:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)_delegate;
- (void)removeFromSuperview;
- (void)setNeedsDisplayInDirtyRect;
- (void)_zoomOut;
- (void)_handleDoubleTap:(struct __GSEvent *)arg1;
- (void)view:(id)arg1 handleTapWithCount:(int)arg2 event:(struct __GSEvent *)arg3 fingerCount:(int)arg4;

@end

@interface PLAlbumScrollView : UIScrollView
{
    BOOL _dragging;
    float _lastX;
    double _lastTimeStamp;
    float _dragSpeed;
    float _grabX;
    struct CGPoint _grabLoc;
    float _mySpeed;
    float _myX;
    float _destinationX;
    NSTimer *_updateTimer;
    int _lastScrollDirection;
    int _lastDragDirection;
    BOOL _shouldAdvance;
    UIView *_leftBackstopView;
    UIView *_rightBackstopView;
    float _slowDownFactor;
    BOOL _scrollTriggered;
    unsigned int _rotationDisabled;
    unsigned int _mouseIsDown:1;
    unsigned int _isScrolling:1;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)setRotationDisabled:(BOOL)arg1;
- (void)_setMouseIsDown:(BOOL)arg1;
- (void)_setIsScrolling:(BOOL)arg1;
- (void)dealloc;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)mouseDown:(struct __GSEvent *)arg1;
- (void)_updateDragInfoWithTimeInterval:(double)arg1 event:(struct __GSEvent *)arg2 smoothScrolling:(BOOL)arg3;
- (void)_updateScrollWithTimeInterval:(double)arg1;
- (void)_updateTimerFired:(id)arg1;
- (void)mouseDragged:(struct __GSEvent *)arg1;
- (void)mouseUp:(struct __GSEvent *)arg1;
- (void)contentMouseUpInView:(id)arg1 withEvent:(struct __GSEvent *)arg2;
- (void)_releaseDrag;
- (BOOL)canBecomeFirstResponder;
- (void)copy:(id)arg1;
- (BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)gestureStarted:(struct __GSEvent *)arg1;
- (void)gestureEnded:(struct __GSEvent *)arg1;
- (void)gestureChanged:(struct __GSEvent *)arg1;
- (BOOL)_alwaysHandleInteractionEvents;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setScrollEnabled:(BOOL)arg1;
- (void)setContentSize:(struct CGSize)arg1;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)_cancelUpdateTimer;
- (void)_startTimer;
- (BOOL)isSmoothScrolling;
- (BOOL)isDragging;
- (int)lastScrollDirection;
- (BOOL)shouldAdvance;
- (void)_doScrollToOffset:(struct CGPoint)arg1 animate:(BOOL)arg2;
- (void)ensureOffsetToImageBoundary;
- (void)scrollToNextImageWithAnimation:(BOOL)arg1 offset:(struct CGPoint)arg2;
- (void)scrollToPreviousImageWithAnimation:(BOOL)arg1 offset:(struct CGPoint)arg2;

@end

@interface PLPhotosDefaults : NSObject
{
    BOOL _shouldRepeat;
    BOOL _shouldShuffle;
    int _transition;
    int _secondsPerSlide;
    NSString *_musicForSlideshow;
}

+ (id)sharedInstance;
+ (int)randomTransition;
- (id)init;
- (BOOL)shouldRepeat;
- (BOOL)shouldShuffle;
- (int)secondsPerSlide;
- (int)transitionForAnimationMovingForward:(BOOL)arg1;
- (int)transition;
- (int)smoothScrollBehavior;
- (BOOL)shouldPlayMusic;
- (id)musicForSlideshow;

@end

@interface PLPhotosMusicPlayer : NSObject
{
}

+ (void)startMusicForAlbum:(id)arg1;
+ (void)_setMusicPlaybackState:(int)arg1;
+ (void)stopMusic;
+ (void)pauseMusic;
+ (void)continueMusic;

@end

@interface TPCameraPushButton : TPPushButton
{
    UIImageView *_cameraIcon;
}

- (void)dealloc;
- (void)setShowsCameraIcon:(BOOL)arg1;
- (BOOL)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface PLCropLCDLayer : UIView
{
    NSString *_subtitle;
    NSString *_title;
}

- (void)dealloc;
- (void)setTitle:(id)arg1;
- (id)title;
- (void)setSubtitle:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface PLCropOverlayCropView : UIView
{
    struct CGRect _cropRect;
}

- (void)setCropRect:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGRect)cropRect;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface PLCropOverlay : UIView
{
    id _delegate;
    PLCropOverlayCropView *_cropView;
    PLCropOverlayBottomBar *_bottomBar;
    UIImageView *_shadowView;
    UIView *_overlayContainerView;
    struct CGRect _cropRect;
    PLToolbar *_customToolbar;
    PLCropLCDLayer *_lcd;
    UIImageView *_lcdImage;
    TPBottomDualButtonBar *_oldBottomBar;
    TPPushButton *_cancelButton;
    TPCameraPushButton *_okButton;
    UIProgressHUD *_hud;
    float _statusBarHeight;
    int _mode;
    unsigned int _cropRectIsVisible:1;
    unsigned int _offsetStatusBar:1;
    unsigned int _tookPhoto:1;
    unsigned int _showsCropRegion:1;
    unsigned int _controlsAreVisible:1;
}

- (void)_updateToolbarItems:(BOOL)arg1;
- (id)initWithFrame:(struct CGRect)arg1 mode:(int)arg2 offsettingStatusBar:(BOOL)arg3;
- (BOOL)controlsAreVisible;
- (void)setControlsAreVisible:(BOOL)arg1;
- (id)overlayContainerView;
- (void)setOverlayContainerView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 mode:(int)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_createCropView;
- (void)insertIrisView:(id)arg1;
- (id)bottomBar;
- (id)shutterButton;
- (void)setModeSwitch:(id)arg1;
- (id)modeSwitch;
- (void)setCropRectVisible:(BOOL)arg1 duration:(float)arg2;
- (void)_setMode:(int)arg1;
- (void)didCapturePhoto;
- (void)didCaptureVideo;
- (void)didPlayVideo;
- (void)didPauseVideo;
- (int)mode;
- (void)dealloc;
- (void)statusBarHeightDidChange:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)dismiss;
- (void)_fadeOutCompleted:(id)arg1;
- (void)cancelButtonClicked:(id)arg1;
- (void)okButtonClicked:(id)arg1;
- (void)cropOverlayBottomBarCancelButtonClicked:(id)arg1;
- (void)cropOverlayBottomBarDoneButtonClicked:(id)arg1;
- (void)cropOverlayBottomBarPlayButtonClicked:(id)arg1;
- (void)_playButtonPressed:(id)arg1;
- (void)cropOverlayBottomBarPauseButtonClicked:(id)arg1;
- (void)_pauseButtonPressed:(id)arg1;
- (void)setEnabled:(BOOL)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (struct CGRect)cropRect;
- (void)setTitle:(id)arg1 okButtonTitle:(id)arg2;
- (void)setTitle:(id)arg1;
- (void)setOKButtonColor:(int)arg1;
- (void)setOKButtonTitle:(id)arg1;
- (void)setOKButtonShowsCamera:(BOOL)arg1;
- (void)setCancelButtonTitle:(id)arg1;
- (void)setShowProgress:(BOOL)arg1 title:(id)arg2;
- (void)removeProgress;
- (void)setProgressDone;
- (void)setShowsCropRegion:(BOOL)arg1;
- (id)dictionaryWithCropResultsFromImageScroller:(id)arg1 withOptions:(int)arg2;

@end

@interface PLImageScrollView : UIScrollView
{
    PLImageView *_imageView;
    PLImageTile *_imageTile;
    struct CGPoint _grabLoc;
    BOOL _locked;
    BOOL _isZooming;
    BOOL _canFlickDuringTouch;
    BOOL _dontAdjustOffset;
    struct CGSize _padding;
    struct {
        unsigned int delegateImplementsSiblingForDirection:1;
        unsigned int allowNegativeOffsets:1;
        unsigned int reserved:30;
    } _imageScrollerFlags;
    PLImageView *_leftView;
    PLImageView *_rightView;
}

- (struct CGSize)_contentSizeForView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (BOOL)canHandleSwipes;
- (void)setDelegate:(id)arg1;
- (void)_adjustPositionOfView:(id)arg1 forContentSize:(struct CGSize)arg2 offset:(struct CGPoint)arg3;
- (void)updateSideViews;
- (void)_clearSideViews;
- (id)_createSideViewWithImageView:(id)arg1 frame:(struct CGRect)arg2;
- (void)_showSideViewInDirection:(int)arg1;
- (void)_showLeftView;
- (void)_showRightView;
- (void)setContentSize:(struct CGSize)arg1;
- (BOOL)alwaysBounceHorizontal;
- (void)setAllowNegativeOffsets:(BOOL)arg1;
- (void)setOffset:(struct CGPoint)arg1 animated:(BOOL)arg2;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)setDontAdjustOffset:(BOOL)arg1;
- (void)_adjustContentOffsetIfNecessary;
- (void)resetContentOffsetAnimated:(BOOL)arg1;
- (void)setLockedOnImage:(BOOL)arg1;
- (struct CGSize)padding;
- (void)setPadding:(struct CGSize)arg1;
- (id)imageView;
- (void)setImageView:(id)arg1;
- (id)imageTile;
- (void)setImageTile:(id)arg1;
- (BOOL)canFlick;
- (BOOL)shouldAdvance;
- (BOOL)_alwaysHandleScrollerMouseEvent;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)zoomToScale:(float)arg1;
- (void)imageView:(id)arg1 didStartGesture:(int)arg2 forEvent:(struct __GSEvent *)arg3;
- (struct CGImage *)createImageWithCropRect:(struct CGRect)arg1 croppedImageData:(id *)arg2 fullSizeImageData:(id *)arg3 fullScreenImageData:(id *)arg4 imageCropRect:(struct CGRect *)arg5 padWithBlack:(BOOL)arg6;

@end

@interface PLPhotoLibrary : MLPhotoLibrary
{
}

+ (id)sharedPhotoLibrary;
+ (id)sharedPhotoLibraryIfExists;
+ (id)photosDirectory;
+ (struct CGImage *)createThumbnailOfImage:(struct CGImage *)arg1 format:(int)arg2 atPath:(id)arg3;
+ (struct CGImage *)createThumbnailOfImage:(struct CGImage *)arg1 format:(int)arg2 atPath:(id)arg3 orientation:(int)arg4;
+ (struct CGImage *)createThumbnailOfImage:(struct CGImage *)arg1 format:(int)arg2 atPath:(id)arg3 orientation:(int)arg4 thumbnailDataOut:(id *)arg5;
- (id)init;
- (void)dealloc;
- (struct CGImage *)createCGImageForDulcimerImage:(id)arg1 format:(int)arg2 copyImageData:(BOOL)arg3;
- (struct CGImage *)createCGImageForDulcimerImage:(id)arg1 format:(int)arg2;
- (id)imageForFormat:(int)arg1 forImage:(id)arg2;
- (id)albums;
- (id)posterImageForAlbum:(id)arg1;
- (void)_cameraAlbumContentsChanged:(id)arg1;

@end

@interface PLCameraController : NSObject
{
    AVCapture *_avCapture;
    PLPreviewView *_previewView;
    BOOL _isPreviewing;
    BOOL _isLocked;
    int _cameraMode;
    int _captureOrientation;
    int _focusCount;
    int _autofocusCount;
    unsigned int _previousSimpleRemotePriority;
    id <PLCameraControllerDelegate> _delegate;
    double _startTime;
    double _maximumCaptureDuration;
    int _captureQuality;
    NSString *_lastLocationStr;
    struct {
        unsigned int supportsVideo:1;
        unsigned int supportsAccurateStillCapture:1;
        unsigned int supportsFocus:1;
        unsigned int supportsExposure:1;
        unsigned int capturingVideo:1;
        unsigned int deferStopPreview:1;
        unsigned int deferStartVideoCapture:1;
        unsigned int inCall:1;
        unsigned int continuousAutofocusDuringCapture:1;
        unsigned int focusDisabled:1;
        unsigned int focusedAtPoint:1;
        unsigned int wasInterrupted:1;
        unsigned int resumePreviewing:1;
        unsigned int isReady:1;
        unsigned int didSetPreviewLayer:1;
        unsigned int didNotifyCaptureEnded:1;
        unsigned int dontShowFocus:1;
        unsigned int restartLocationAfterCapture:1;
        unsigned int didSetLocationData:1;
        unsigned int isChangingMode:1;
        unsigned int delegateModeDidChange:1;
        unsigned int delegateTookPicture:1;
        unsigned int delegateReadyStateChanged:1;
        unsigned int delegateVideoCaptureDidStart:1;
        unsigned int delegateVideoCaptureDidStop:1;
        unsigned int delegateFocusFinished:1;
    } _cameraFlags;
}

+ (id)sharedInstance;
+ (struct CGAffineTransform)defaultPreviewViewTransform;
- (id)init;
- (void)dealloc;
- (void)_inCallStatusChanged:(BOOL)arg1;
- (BOOL)inCall;
- (void)_locationChanged;
- (void)_setIsReady;
- (BOOL)isReady;
- (BOOL)canCaptureVideo;
- (int)cameraMode;
- (void)_setCameraMode:(int)arg1 force:(BOOL)arg2;
- (void)setCameraMode:(int)arg1;
- (void)_applicationSuspended;
- (void)_applicationResumed;
- (void)_tookPicture:(struct CGImage *)arg1 jpegData:(struct __CFData *)arg2 imageProperties:(struct __CFDictionary *)arg3;
- (void)_tookPhoto:(id)arg1;
- (void)_previewStarted:(id)arg1;
- (void)_previewStopped:(id)arg1;
- (void)_setVideoPreviewLayer;
- (BOOL)_setupCamera;
- (void)viewDidAppear;
- (void)_tearDownCamera;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)previewView;
- (void)startPreview;
- (void)_destroyAVCapture;
- (void)_stopPreview;
- (void)stopPreview;
- (void)resumePreview;
- (BOOL)supportsAccurateStillCapture;
- (void)capturePhoto:(BOOL)arg1;
- (BOOL)isCapturingVideo;
- (void)_captureStarted:(id)arg1;
- (id)_createPreviewImage;
- (void *)_createPreviewIOSurface;
- (void)_captureCompleted:(id)arg1;
- (void)_didStopCapture;
- (void)_wasInterrupted:(id)arg1;
- (void)_interruptionEnded:(id)arg1;
- (BOOL)canStartVideoCapture;
- (BOOL)startVideoCaptureAtPath:(id)arg1 deviceOrientation:(int)arg2;
- (void)_stopVideoCaptureAndPausePreview:(id)arg1;
- (void)stopVideoCaptureAndPausePreview:(BOOL)arg1;
- (id)videoCapturePath;
- (void)_addMoreMetadataToVideo:(id)arg1;
- (BOOL)focusAtPoint:(struct CGPoint)arg1;
- (void)restartAutoFocus;
- (void)autofocus;
- (void)lockFocus;
- (BOOL)isFocusing;
- (void)setDontShowFocus:(BOOL)arg1;
- (void)setFocusDisabled:(BOOL)arg1;
- (void)setVideoCaptureQuality:(int)arg1;
- (void)setVideoCaptureMaximumDuration:(double)arg1;
- (void)_commonFocusFinished;
- (void)_focusOperationFinished;
- (void)_autofocusOperationFinished;
- (void)_focusCompleted:(id)arg1;
- (void)_focusWasCancelled:(id)arg1;
- (void)_focusStarted:(id)arg1;
- (void)_focusHasChanged:(id)arg1;
- (int)videoCaptureOrientation;
- (void)irisWillClose;
- (void)_serverDied:(id)arg1;

@end

@interface PLPreviewView : UIView
{
    struct CGPoint _touchLocation;
    PLCameraFocusView *_focusView;
    PLCameraFocusView *_autoFocusView;
    UIView *_disabledView;
    unsigned int _canShowFocus:1;
    unsigned int _controlsAreVisible:1;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)_focusAtPoint:(struct CGPoint)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)motionEnded:(int)arg1 withEvent:(id)arg2;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canResignFirstResponder;
- (void)dealloc;
- (void)removeFocusView;
- (void)showAutofocusView;
- (void)focusDidEnd;
- (void)setDontShowFocus:(BOOL)arg1;
- (void)setControlsAreVisible:(BOOL)arg1;

@end

@interface PLCameraButtonBar : PLPhotosButtonBar
{
    PLCameraButton *_cameraButton;
}

+ (id)backgroundImage;
- (void)layoutSubviews;
- (id)cameraButton;
- (void)setCameraButton:(id)arg1;

@end

@interface PLCameraButton : UIThreePartButton
{
    UIView *_rotationHolder;
    UIImageView *_iconView;
    BOOL _lockEnabled;
    BOOL _isLandscape;
    BOOL _dontDrawDisabled;
    UIImage *_cameraIcon;
    UIImage *_cameraIconLandscape;
    NSArray *_videoRecordingIcons;
    BOOL _videoMode;
    BOOL _videoIsRecording;
    int _orientation;
    BOOL _watchingOrientationChanges;
}

- (id)initWithDefaultSize;
- (void)_setIcon:(id)arg1;
- (void)dealloc;
- (void)setVideoMode:(BOOL)arg1;
- (void)setVideoIsRecording:(BOOL)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (BOOL)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setDontShowDisabledState:(BOOL)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)_setHighlightOnMouseDown:(BOOL)arg1;
- (void)setLockEnabled:(BOOL)arg1;
- (void)_startWatchingDeviceOrientationChanges;
- (void)_stopWatchingDeviceOrientationChanges;
- (void)_deviceOrientationChanged:(id)arg1;
- (void)_setDeviceOrientation:(int)arg1 animated:(BOOL)arg2;
- (int)orientation;

@end

@interface PLImageLoader : NSObject
{
}

+ (void)_imageLoader;
+ (void)pauseLoading;
+ (void)resumeLoading;
+ (void)_finishedLoadingImageRef:(id)arg1;
+ (void)_finishDeferredImageLoads;
+ (void)stop;
+ (void)loadFullSizeImageRefForImageView:(id)arg1;
+ (void)cancelLoadRequestsForImageView:(id)arg1;

@end

@interface PLEmptyAlbumView : UIView
{
    UIImageView *_icon;
    UITextLabel *_title;
    UITextLabel *_message;
    MLPhotoAlbum *_album;
}

- (id)_emptyRollImageForAlbum:(id)arg1;
- (id)_messageForAlbum:(id)arg1;
- (id)_titleForAlbum:(id)arg1;
- (id)_createLabelWithText:(id)arg1 font:(id)arg2 bottom:(float)arg3;
- (id)_createTextViewWithText:(id)arg1 bottom:(float)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)setAlbum:(id)arg1;
- (void)layoutSubviews;

@end

@interface PLMobileMeHelper : NSObject
{
    BOOL _performedFullAccountScan;
    NSMutableArray *_usernamesToCheck;
    NSArray *_likelyValidUsernames;
    NSDictionary *_usernameMap;
}

+ (void)initialize;
+ (id)_copyPasswordForUsername:(id)arg1;
+ (id)_createAlbumFetchRequestForUsernames:(id)arg1 includeTimeStamp:(BOOL)arg2;
+ (id)serviceName;
+ (id)userAgentString;
+ (id)languageString;
+ (id)sharedInstance;
+ (id)dotMacUsernames;
+ (id)preferredUsername;
- (id)passwordForUsername:(id)arg1;
- (id)init;
- (void)dealloc;
- (BOOL)canPostToDotMac;
- (id)_accountsWeThinkAreValid;
- (id)usernames;
- (BOOL)canValidateAlbums;

@end

@interface PLSyncProgressView : UIView
{
    UIImageView *_icon;
}

- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface PLLocationController : NSObject <CLLocationManagerDelegate>
{
    CLLocationManager *_locationManager;
    int _managerRefCount;
    NSMutableArray *_locationPendingPaths;
    NSMutableArray *_pendingPathTimestamps;
    CLHeading *_lastHeading;
    NSDictionary *_supportDOPInfo;
    NSDictionary *_exifDictionary;
    NSString *_locationStr;
    BOOL _isUpdating;
}

+ (id)sharedInstance;
- (void)dealloc;
- (void)start;
- (void)stop;
- (BOOL)_isRunning;
- (BOOL)isUpdating;
- (id)location;
- (id)locationEXIFDictionary;
- (id)locationString;
- (BOOL)_addLocationToMediaPath:(id)arg1;
- (void)addLocationToMediaAtPathWhenAvailable:(id)arg1;
- (void)_updatePendingImagePaths;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3 usingSupportInfo:(id)arg4;
- (void)locationManager:(id)arg1 didUpdateHeading:(id)arg2;

@end

@interface PLDiskController : NSObject
{
    double _lastFSCheck;
    long long _freeDiskSpaceThreshold;
    struct {
        unsigned int dontWarnOfDiskSpace:1;
        unsigned int probablyLowOnDiskSpace:1;
        unsigned int didSetFreeDiskSpaceThreshold:1;
        unsigned int extra:29;
    } _flags;
}

+ (id)sharedInstance;
- (id)init;
- (void)noteFileSystemChanged:(id)arg1;
- (long long)diskSpaceAvailableForUse;
- (long long)freeDiskSpaceThreshold;
- (BOOL)hasEnoughDiskToTakePicture;
- (void)presentDiskSpaceWarningIfNecessary:(BOOL)arg1;
- (void)alertSheet:(id)arg1 buttonClicked:(int)arg2;

@end

@interface PLAlbumViewController : UIViewController
{
    MLPhotoAlbum *_album;
    int _previousStatusBarMode;
    int _newStatusBarMode;
    unsigned int _didSetPreviousStatusBarMode:1;
}

- (id)init;
- (id)initWithAlbum:(id)arg1;
- (void)dealloc;
- (void)loadView;
- (void)viewWillAppear:(BOOL)arg1;
- (int)_imagePickerStatusBarMode;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)setAlbum:(id)arg1;
- (id)album;
- (id)contentScrollView;
- (id)albumView;
- (int)previousStatusBarMode;
- (void)setPreviousStatusBarMode:(int)arg1;

@end

@interface PLCameraViewController : UIViewController
{
    PLCameraView *_cameraView;
}

- (BOOL)_displaysFullScreen;
- (void)dealloc;
- (void)loadView;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;

@end

@interface PLUIImageViewController : UIViewController <PLVideoViewDelegate>
{
    MLPhoto *_photo;
    struct CGImage *_imageRef;
    UIImage *_image;
    struct CGRect _cropRect;
    PLCropOverlay *_cropOverlay;
    PLImageTile *_imageTile;
    PLVideoView *_videoView;
    PLVideoRemaker *_remaker;
    NSString *_videoPath;
    int _previousStatusBarMode;
    int _newStatusBarMode;
    unsigned int _allowEditing:1;
    unsigned int _statusBarWasHidden:1;
    unsigned int _isVideo:1;
    unsigned int _isDisappearing:1;
    unsigned int _remaking:1;
}

- (BOOL)_displaysFullScreen;
- (id)initWithPhoto:(id)arg1;
- (id)initWithImage:(struct CGImage *)arg1 cropRect:(struct CGRect)arg2;
- (id)initWithUIImage:(id)arg1 cropRect:(struct CGRect)arg2;
- (id)initWithVideoPath:(id)arg1;
- (void)dealloc;
- (int)_deviceOrientationFromImageOrientation:(int)arg1;
- (int)cropOverlayMode;
- (struct CGRect)previewFrame;
- (void)loadView;
- (void)setParentViewController:(id)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (int)_imagePickerStatusBarMode;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)setAllowsEditing:(BOOL)arg1;
- (void)_editabilityChanged:(id)arg1;
- (void)_updateGestureSettings;
- (void)_updateTitles;
- (void)willStartGesture:(int)arg1 inView:(id)arg2 forEvent:(struct __GSEvent *)arg3;
- (void)cropOverlayWasCancelled:(id)arg1;
- (void)didChooseVideoAtPath:(id)arg1 options:(id)arg2;
- (void)cropOverlayWasOKed:(id)arg1;
- (void)cropOverlay:(id)arg1 didFinishSaving:(id)arg2;
- (void)cropOverlayPlay:(id)arg1;
- (void)cropOverlayPause:(id)arg1;
- (BOOL)videoViewCanCreateMetadata:(id)arg1;
- (BOOL)videoViewShouldDisplayScrubber:(id)arg1;
- (BOOL)videoViewShouldDisplayOverlay:(id)arg1;
- (float)videoViewScrubberYOrigin:(id)arg1;
- (BOOL)videoViewCanBeginPlayback:(id)arg1;
- (id)_trimMessage;
- (void)videoViewIsReadyToBeginPlayback:(id)arg1;
- (void)videoViewDidBeginPlayback:(id)arg1;
- (void)videoViewDidPausePlayback:(id)arg1 didFinish:(BOOL)arg2;
- (void)videoViewDidEndPlayback:(id)arg1 didFinish:(BOOL)arg2;
- (BOOL)videoViewShouldRemoveFromViewHierarchy:(id)arg1;
- (void)videoRemakerDidBeginRemaking:(id)arg1;
- (void)videoRemakerDidEndRemaking:(id)arg1 temporaryPath:(id)arg2;

@end

@interface PLLibraryViewController : UIViewController
{
    PLPhotoLibrary *_library;
    int _previousStatusBarMode;
    int _newStatusBarMode;
    PLCachedVideoFilesManager *_cachedVideoFileManager;
    struct {
        unsigned int albumsInvalid:1;
        unsigned int visible:1;
        unsigned int filter:3;
        unsigned int didSetPreviousStatusBarMode:1;
        unsigned int reserved:26;
    } _libraryControllerFlags;
}

- (id)init;
- (void)dealloc;
- (void)iTunesSyncDidFinish;
- (void)iTunesSyncDidStart;
- (void)iTunesSyncPhaseWillStart:(int)arg1;
- (void)iTunesSyncPhaseDidFinish:(int)arg1 reason:(int)arg2;
- (void)loadView;
- (id)contentScrollView;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewDidUnload;
- (int)_imagePickerStatusBarMode;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)setFilter:(int)arg1;
- (int)filter;
- (id)_library;
- (void)_updateAlbumsIfNecessary;
- (void)_reloadLibrary;
- (void)_runVideoPostProcessIfNecessary;

@end

@interface PLImageWriter : NSObject <MLPhotoBakedThumbnailsDelegate>
{
    NSMutableArray *_jobs;
    NSRecursiveLock *_jobsLock;
    BOOL _writerThreadRunning;
}

+ (id)sharedWriter;
+ (void)decorateThumbnail:(id)arg1 inContext:(struct CGContext *)arg2;
- (id)init;
- (void)dealloc;
- (BOOL)enqueueJob:(id)arg1 forFileGroup:(id)arg2;
- (int)_orientationForExifProperties:(id)arg1;
- (int)_subSampleFactorForImageSize:(struct CGSize)arg1;
- (void)_processImageJob:(id)arg1;
- (void)_decorateThumbnail:(id)arg1;
- (void)decorateThumbnail:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)_processVideoJob:(id)arg1 saveCameraRollPosterImage:(BOOL)arg2;
- (BOOL)_sufficientDiskSpaceToCopyVideoAtPath:(id)arg1;
- (void)_processVideoSaveJob:(id)arg1;
- (void)_processJob:(id)arg1;
- (void)_writerThread;
- (void)_notifyJobCompletion:(id)arg1;

@end

@interface PLSynchronousFileValidator : NSObject
{
    AVFileValidator *_fileValidator;
    NSRecursiveLock *_lock;
    BOOL _isValid;
}

- (id)initWithPath:(id)arg1;
- (void)_setupOnMainThread:(id)arg1;
- (void)_validationCompleted:(id)arg1;
- (void)_startValidation;
- (BOOL)isValid;
- (void)dealloc;

@end

@interface PLVideoThumbnailGenerator : NSObject
{
    AVController *_avController;
    NSString *_filePath;
    double _duration;
    struct CGSize _naturalSize;
    NSMutableArray *_outstandingIdentifiers;
    NSMutableArray *_gatheredIdentifiers;
    NSMutableArray *_gatheredImages;
    NSMutableArray *_gatheredTimes;
    NSRecursiveLock *_lock;
    CDAnonymousStruct1 *_progressStack;
}

- (void)_thumbnailImageWasGenerated:(id)arg1;
- (void)_thumbnailImageGenerationFailed:(id)arg1;
- (void)_requestAsyncCGImagesAtTimesParams:(id)arg1;
- (void)_mainThreadSetup;
- (void)_mainThreadTeardown;
- (void)dealloc;
- (void)setup;
- (void)teardown;
- (struct CGImage *)getCGImageAtTime:(double)arg1 size:(struct CGSize)arg2;
- (void)requestAsyncCGImagesAtTimes:(id)arg1 requestIDs:(id)arg2 withImageOptions:(id)arg3 outTimes:(id *)arg4 outImages:(id *)arg5 outRequestIDs:(id *)arg6;
- (CDAnonymousStruct1 *)progressStack;
- (void)setProgressStack:(CDAnonymousStruct1 *)arg1;
- (struct CGSize)naturalSize;
- (double)duration;
- (id)avController;
- (id)filePath;
- (void)setFilePath:(id)arg1;

@end

@interface PLCameraElapsedTimeView : UIImageView
{
    UILabel *_hours;
    UILabel *_minutes;
    UILabel *_seconds;
    NSTimer *_timer;
    NSDate *_startTime;
    BOOL _watchingOrientationChanges;
    BOOL _animateTimeView;
    int _orientation;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)_update:(id)arg1;
- (void)startTimer;
- (void)stopTimer;
- (void)willMoveToSuperview:(id)arg1;
- (void)_startWatchingDeviceOrientationChanges;
- (void)_stopWatchingDeviceOrientationChanges;
- (void)_deviceOrientationChanged:(id)arg1;
- (void)setOrientation:(int)arg1;
- (void)_fadeOutDidComplete;
- (void)_setDeviceOrientation:(int)arg1 animated:(BOOL)arg2;

@end

@interface PLVideoEditingOverlayView : UIView
{
    UILabel *_titleLabel;
    UILabel *_bodyLabel;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setTitle:(id)arg1;
- (void)setBody:(id)arg1;
- (void)layoutSubviews;

@end

@interface PLVideoView : UIView <UIMovieScrubberDelegate, UIMovieScrubberDataSource, PLItemView>
{
    MLPhoto *_videoCameraImage;
    PLImageTile *_imageTile;
    UIImageView *_posterFrameView;
    UIButton *_videoOverlayPlayButton;
    PLVideoEditingOverlayView *_trimMessageView;
    unsigned int _scaleMode;
    UIImageView *_scrubberBackgroundView;
    UIMovieScrubber *_scrubber;
    NSTimer *_scrubberUpdateTimer;
    NSDictionary *_thumbnailOptionsDict;
    NSMutableDictionary *_cachedThumbnails;
    MLPhotoBakedThumbnails *_bakedLandscapeThumbnails;
    MLPhotoBakedThumbnails *_bakedPortraitThumbnails;
    AVRemaker *_remaker;
    int _timeOptions;
    NSString *_trimmedPath;
    NSTimer *_trimProgressTimer;
    CDAnonymousStruct1 *_trimProgressStack;
    float _progress;
    int _interfaceOrientation;
    PLMoviePlayerController *_moviePlayer;
    int _orientationWhenLastDisplayed;
    id <PLVideoViewDelegate> _delegate;
    double _maximumTrimLength;
    double _lastScrubbedValue;
    double _lastActualValue;
    double _duration;
    NSMutableDictionary *_thumbnailRequests;
    unsigned int _currentThumbnailRequestID;
    unsigned int _previewFrameRequestID;
    NSArray *_portraitSummaryThumbnailTimestamps;
    NSArray *_landscapeSummaryThumbnailTimestamps;
    unsigned int _didLayout:1;
    unsigned int _wasPlayingBeforeScrub:1;
    unsigned int _playFromBeginning:1;
    unsigned int _reloadScrubberThumbnails:1;
    unsigned int _playing:1;
    unsigned int _editing:1;
    unsigned int _canEdit:1;
    unsigned int _disableEditAfterTrim:1;
    unsigned int _scrubbing:1;
    unsigned int _scrubbingToRight:1;
    unsigned int _showsPosterFrame:1;
    unsigned int _deleteOriginalFile:1;
    unsigned int _passthroughTrimming:1;
    unsigned int _preparingMoviePlayer:1;
    unsigned int _didPrepareMoviePlayer:1;
    unsigned int _canShowOverlay:1;
    unsigned int _showingOverlay:1;
    unsigned int _showingScrubber:1;
    unsigned int _showScrubberWhenMovieIsReady:1;
    unsigned int _playbackDidBegin:1;
    unsigned int _playbackWillBegin:1;
    unsigned int _didDisappear:1;
    unsigned int _loadScrubberThumbnails:1;
    unsigned int _loadMediaImmediately:1;
    unsigned int _displayingToTVOut:1;
    unsigned int _videoIsLandscape:1;
    unsigned int _canCreateMetadata:1;
    unsigned int _createPreviewPosterFrame:1;
}

- (id)initWithFrame:(struct CGRect)arg1 videoCameraImage:(id)arg2 orientation:(int)arg3;
- (void)dealloc;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)description;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)mouseDown:(struct __GSEvent *)arg1;
- (void)mouseUp:(struct __GSEvent *)arg1;
- (void)mouseDragged:(struct __GSEvent *)arg1;
- (BOOL)_alwaysHandleScrollerMouseEvent;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (float)_scrubberYOffsetForOrientation:(int)arg1;
- (void)_createScrubber:(BOOL)arg1;
- (void)_showVideoOverlay;
- (void)_videoOverlayFadeOutDidFinish;
- (void)_hideVideoOverlay:(BOOL)arg1;
- (void)_hideTrimMessageView:(BOOL)arg1;
- (void)_updateScrubberVisibility:(BOOL)arg1;
- (void)_updatePosterContentMode;
- (void)_setScaleModeForSize:(struct CGSize)arg1;
- (BOOL)_canCreateMetadata;
- (void)layoutSubviews;
- (void)_fileGroupContentsDidChange:(id)arg1;
- (void)_itemPlaybackDidEnd:(id)arg1;
- (void)_reloadScrubberThumbnails;
- (BOOL)moviePlayerExitRequest:(id)arg1 exitReason:(int)arg2;
- (void)moviePlayerPlaybackStateDidChange:(id)arg1;
- (void)_requestPreviewPosterFrameForVideoSize:(struct CGSize)arg1;
- (void)_savePreviewPosterFrameImage:(struct CGImage *)arg1;
- (void)moviePlayerReadyToBeginPlayback:(id)arg1;
- (void)moviePlayerDelegateDidChange:(id)arg1;
- (BOOL)moviePlayerHeadsetPlayPausePressed:(id)arg1;
- (double)movieScrubberDuration:(id)arg1;
- (id)movieScrubber:(id)arg1 evenlySpacedTimestamps:(int)arg2 startingAt:(id)arg3 endingAt:(id)arg4;
- (id)movieScrubber:(id)arg1 timestampsStartingAt:(id)arg2 endingAt:(id)arg3 maxCount:(int)arg4;
- (void)_saveCachedThumbnailsIfNecessary;
- (void)_thumbnailImageWasGenerated:(id)arg1;
- (void)_thumbnailImageGenerationFailed:(id)arg1;
- (void)movieScrubber:(id)arg1 requestThumbnailImageForTimestamp:(id)arg2;
- (id)_loadThumbnailsIntoDictionary:(id)arg1 isLandscape:(BOOL)arg2 aspectRatio:(float)arg3;
- (float)movieScrubberThumbnailAspectRatio:(id)arg1;
- (void)_removeScrubberUpdateTimer;
- (void)_resetScrubberUpdateTimer;
- (void)movieScrubberDidBeginScrubbing:(id)arg1 withHandle:(int)arg2;
- (void)movieScrubberDidEndScrubbing:(id)arg1 withHandle:(int)arg2;
- (void)_didScrubToValue:(double)arg1 withHandle:(int)arg2;
- (void)movieScrubber:(id)arg1 valueDidChange:(double)arg2;
- (void)movieScrubber:(id)arg1 editingStartValueDidChange:(double)arg2;
- (void)movieScrubber:(id)arg1 editingEndValueDidChange:(double)arg2;
- (void)movieScrubberWillBeginRequestingThumbnails:(id)arg1;
- (void)movieScrubberDidFinishRequestingThumbnails:(id)arg1;
- (void)movieScrubberDidBeginEditing:(id)arg1;
- (void)setMaximumTrimLength:(double)arg1;
- (void)showTrimMessage:(id)arg1 withBottomY:(float)arg2;
- (void)hideTrimMessage;
- (void)setEditing:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setEditing:(BOOL)arg1;
- (BOOL)isEditing;
- (void)_reset;
- (void)movieScrubberEditingAnimationFinished:(id)arg1;
- (void)_scrubberAnimationFinished;
- (void)_thumbnailsWereRegenerated:(id)arg1 error:(id)arg2 contextInfo:(void *)arg3;
- (void)_removeTrimProgressTimer;
- (void)_resetTrimProgressTimer;
- (void)_updateTrimProgress;
- (void)setProgress:(id)arg1;
- (void)_remakerDidFinish:(id)arg1;
- (void)trimUsingMode:(int)arg1 passthrough:(BOOL)arg2 saveACopy:(BOOL)arg3;
- (void)cancelTrim;
- (double)startTime;
- (double)endTime;
- (id)createPreviewImageData:(id *)arg1 fullScreenImage:(id *)arg2;
- (id)previewImageView;
- (id)videoCameraImage;
- (id)imageTile;
- (void)setImageTile:(id)arg1;
- (void)toggleScaleMode:(float)arg1;
- (void)handleDoubleTap;
- (BOOL)isPlaying;
- (void)_willBeginPlayback;
- (void)playButtonClicked:(id)arg1;
- (void)play;
- (void)pause;
- (void)stop;
- (void)hideScrubberBackgroundViewWithDuration:(float)arg1;
- (void)showScrubberBackgroundViewWithDuration:(float)arg1;
- (void)viewWillAppearWithoutAnimation;
- (void)_viewDidAppear:(BOOL)arg1;
- (void)viewDidAppear;
- (void)viewDidDisappear;
- (void)setFrame:(struct CGRect)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (void)setShowsPosterFrame:(BOOL)arg1;
- (BOOL)showsPosterFrame;
- (void)setCanEdit:(BOOL)arg1;
- (BOOL)canEdit;
- (BOOL)_canEditDuration:(double)arg1;
- (void)setIsDisplayingToTVOut:(BOOL)arg1;
- (BOOL)isDisplayingToTVOut;
- (void)setLoadMediaImmediately:(BOOL)arg1;
- (BOOL)loadMediaImmediately;
- (BOOL)shouldShowCopyCalloutAtPoint:(struct CGPoint)arg1;
- (id)_moviePlayer;
- (void)_prepareMoviePlayer;
- (void)_playbackFinished;
- (double)duration;
- (void)_updateScrubberValue;
- (void)willRotateToInterfaceOrientation:(int)arg1 fromInterfaceOrientation:(int)arg2 duration:(double)arg3;
- (void)updateZoomScales;
- (BOOL)isZoomedOut;
- (float)defaultZoomScale;
- (float)_zoomScale;
- (void)_setZoomScale:(float)arg1 duration:(double)arg2;
- (float)minRotatedScale;
- (int)orientationWhenLastDisplayed;
- (void)setOrientationWhenLastDisplayed:(int)arg1;
- (int)interfaceOrientation;

@end

@interface PLMoviePlayerController : UIMoviePlayerController
{
    id _playerDelegate;
}

+ (void)reset;
+ (id)sharedMoviePlayerController;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (id)delegate;

@end

@interface PLCameraImageWellView : UIButton
{
    UIImage *_shadowImage;
    UIImage *_thumbnailImage;
    UIImage *_thumbnailImageSelected;
    UIView *_maskContainerView;
    UIImageView *_thumbnailImageView;
    UIImageView *_innerShadowImageView;
    UIImageView *_staticMaskView;
    BOOL _watchingOrientationChanges;
    int _deviceOrientation;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_previewImageDidChange:(id)arg1;
- (void)_irisAnimationWillStart:(id)arg1;
- (void)_irisAnimationDidFinish:(id)arg1;
- (void)dealloc;
- (void)_computeSelectedThumbnailImage;
- (void)setEnabled:(BOOL)arg1;
- (void)setImage:(id)arg1;
- (void)beginContentFadeOutWithDuration:(float)arg1;
- (void)addMaskedSubview:(id)arg1;
- (struct CGRect)thumbnailFrame;
- (id)image;
- (void)drawRect:(struct CGRect)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (BOOL)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (BOOL)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)_startWatchingDeviceOrientationChanges;
- (void)_stopWatchingDeviceOrientationChanges;
- (void)_deviceOrientationChanged:(id)arg1;
- (void)_setDeviceOrientation:(int)arg1 animated:(BOOL)arg2;

@end

@interface PLCameraVideoSwitch : UIControl
{
    UIImageView *_wellImageView;
    UIImageView *_handleImageView;
    UIImageView *_cameraImageView;
    UIImageView *_videoImageView;
    UIView *_wellMaskContainerView;
    UIImage *_wellImage;
    UIImage *_handleImage;
    UIImage *_handleDownImage;
    UIImage *_cameraImage;
    UIImage *_cameraLandscapeImage;
    UIImage *_videoImage;
    UIImage *_videoLandscapeImage;
    int _orientation;
    float _trackingHorizontalLocation;
    unsigned int _on:1;
    unsigned int _didLayoutViews:1;
    unsigned int _didMove:1;
    unsigned int _lockEnabled:1;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)setEnabled:(BOOL)arg1;
- (void)setLockEnabled:(BOOL)arg1;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (BOOL)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (BOOL)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (BOOL)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (BOOL)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (BOOL)isOn;
- (void)setOn:(BOOL)arg1;
- (void)setOn:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_loadImages;
- (void)_setOn:(BOOL)arg1 animationDuration:(float)arg2;
- (struct CGAffineTransform)_rotationTransformForDeviceOrientation:(int)arg1;
- (void)_animateImageView:(id)arg1 toTransform:(struct CGAffineTransform)arg2 withImage:(id)arg3 animated:(BOOL)arg4;
- (void)_deviceOrientationChanged:(id)arg1;
- (int)orientation;

@end

@interface PLVideoFileGroup : NSObject
{
    NSURL *_url;
    NSString *_videoPreviewFilePath;
    MLPhoto *_photo;
}

- (id)initWithURL:(id)arg1 forMLPhoto:(id)arg2;
- (void)dealloc;
- (BOOL)hasVideoFile;
- (id)pathForVideoFile;
- (BOOL)hasThumbnail;
- (BOOL)hasPrebakedThumbnail;
- (BOOL)hasPrebakedLandscapeScrubberThumbnails;
- (BOOL)hasPrebakedPortraitScrubberThumbnails;
- (void)setVideoPreviewFilePath:(id)arg1;
- (id)pathForVideoPreviewFile;
- (id)pathForThumbnailFile;
- (id)pathForPrebakedThumbnail;
- (id)pathForPrebakedLandscapeScrubberThumbnails;
- (id)pathForPrebakedPortraitScrubberThumbnails;
- (id)pathForLowResolutionFile;
- (id)pathForTrimmedVideoFile;

@end

@interface PLAudioInternal : MLPhoto
{
    NSURL *_url;
    NSString *_title;
    PLVideoFileGroup *_videoFileGroup;
    NSString *_temporaryPath;
}

- (void)dealloc;
- (BOOL)isVideo;
- (BOOL)isAudio;
- (id)title;
- (id)fileGroup;
- (id)pathForVideoFile;

@end

@interface PLAudio : PLItem
{
}

+ (Class)_internalClass;
- (id)initWithURL:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithData:(id)arg1 pathExtension:(id)arg2;
- (void)dealloc;
- (int)itemType;
- (void)setTitle:(id)arg1;
- (id)title;
- (id)_MLPhoto;
- (BOOL)_allowsRotation;
- (void)_applicationWillTerminate:(id)arg1;
- (id)pathForVideoFile;

@end

@interface PLVideoInternal : MLPhoto
{
    NSURL *_url;
    AVController *_avController;
    AVItem *_avItem;
    PLVideoFileGroup *_videoFileGroup;
    NSString *_temporaryPath;
    unsigned int _canCreateImages:1;
    unsigned int _videoWasCaptured;
}

- (void)dealloc;
- (BOOL)isVideo;
- (id)title;
- (struct CGImage *)createThumbnailCGImageRef;
- (struct CGImage *)createLowResolutionFullScreenCGImageRef;
- (struct CGImage *)createFullScreenCGImageRef:(int *)arg1 properties:(const struct __CFDictionary **)arg2;
- (struct CGImage *)createFullSizeCGImageRef:(int *)arg1;
- (BOOL)hasFullSizeImage;
- (id)fileGroup;
- (id)pathForVideoFile;
- (void)setPathForVideoPreviewFile:(id)arg1;
- (id)pathForVideoPreviewFile;
- (struct CGImage *)_createCGImageForSize:(struct CGSize)arg1;
- (void)_ensureAVItemIsLoaded;
- (void)setVideoWasCaptured:(BOOL)arg1;

@end

@interface PLVideo : PLItem
{
}

+ (Class)_internalClass;
- (id)initWithURL:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithData:(id)arg1 pathExtension:(id)arg2;
- (void)dealloc;
- (id)_createVideoView;
- (int)itemType;
- (void)setTitle:(id)arg1;
- (id)title;
- (id)_MLPhoto;
- (id)URL;
- (void)setPathForVideoFile:(id)arg1;
- (id)pathForVideoFile;
- (void)setPathForVideoPreviewFile:(id)arg1;
- (void)_applicationWillTerminate:(id)arg1;
- (void)setVideoWasCaptured:(BOOL)arg1;

@end

@interface PLImageInternal : MLPhoto
{
    NSURL *_url;
    NSData *_data;
    struct CGImageSource *_imageSource;
}

- (void)dealloc;
- (id)title;
- (struct CGImage *)createThumbnailCGImageRef;
- (struct CGImage *)createLowResolutionFullScreenCGImageRef;
- (struct CGImage *)createFullScreenCGImageRef:(int *)arg1 properties:(const struct __CFDictionary **)arg2;
- (struct CGImage *)createFullSizeCGImageRef:(int *)arg1;
- (BOOL)hasFullSizeImage;
- (struct CGImageSource *)_imageSource;
- (id)_data;

@end

@interface PLImage : PLItem
{
}

+ (Class)_internalClass;
- (id)initWithURL:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithData:(id)arg1 pathExtension:(id)arg2;
- (void)dealloc;
- (int)itemType;
- (void)setTitle:(id)arg1;
- (id)title;
- (id)_MLPhoto;
- (id)imageData;

@end

@interface PLItem : NSObject
{
    id _internal;
}

+ (Class)_internalClass;
- (id)init;
- (void)dealloc;
- (id)initWithURL:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithData:(id)arg1 pathExtension:(id)arg2;
- (int)itemType;
- (id)_MLPhoto;
- (BOOL)_allowsRotation;

@end

@interface PLPhotoScrollerNavigationItem : UINavigationItem
{
}

- (int)barStyle;

@end

@interface PLPhotoScrollerViewController : UIViewController
{
    id _delegate;
    id _albumsController;
    unsigned int _itemIndex;
    UINavigationItem *_navItem;
    NSArray *_items;
    id _uiController;
    int _previousInterfaceOrientation;
    unsigned int _canShowCopyCallout:1;
    unsigned int _didDisplay:1;
    unsigned int _modalSheetIsPresent:1;
    unsigned int _dontChangeStatusBar:1;
}

- (id)initWithItems:(id)arg1;
- (id)_initWithAlbum:(id)arg1 lockStatusBar:(BOOL)arg2 currentImageIndex:(int)arg3;
- (void)dealloc;
- (id)navigationItem;
- (void)loadView;
- (void)setDontChangeStatusBar:(BOOL)arg1;
- (BOOL)dontChangeStatusBar;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (void)willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(int)arg1;
- (id)rotatingFooterView;
- (void)albumsController:(id)arg1 didMoveToPhotoAtIndex:(unsigned int)arg2;
- (BOOL)albumsControllerShouldShowActionItem:(id)arg1;
- (BOOL)albumsControllerShowActionSheet:(id)arg1 inView:(id)arg2;
- (BOOL)albumsControllerShouldShowVideoOverlay:(id)arg1;
- (unsigned int)visibleItemIndex;
- (void)setVisibleItemIndex:(unsigned int)arg1;
- (id)itemAtIndex:(unsigned int)arg1;
- (BOOL)canShowCopyCallout;
- (void)setCanShowCopyCallout:(BOOL)arg1;
- (void)_updateNavigationItemTitle;
- (BOOL)_visibleItemAllowsRotation;
- (void)_forceRotationToPortaitIfNecessary;
- (id)delegate;
- (void)setDelegate:(id)arg1;

@end

@interface PLPhotoScrollerAlbum : MLPhotoAlbum
{
}

- (BOOL)canCreateMetadata;

@end

@interface PLUIAlbumViewController : PLAlbumViewController
{
}

- (void)loadView;
- (void)viewWillAppear:(BOOL)arg1;
- (void)cancelButtonClicked:(id)arg1;
- (void)_setImagePickerMediaTypes:(id)arg1;
- (void)setAlbum:(id)arg1;
- (void)albumView:(id)arg1 selectedPhoto:(id)arg2;

@end

@interface PLUILibraryViewController : PLLibraryViewController
{
}

- (void)dealloc;
- (void)loadView;
- (void)viewWillAppear:(BOOL)arg1;
- (void)cancelButtonClicked:(id)arg1;
- (void)iTunesSyncDidFinish;
- (void)_setImagePickerMediaTypes:(id)arg1;
- (void)libraryView:(id)arg1 didSelectAlbum:(id)arg2;

@end

@interface PLUICameraViewController : PLCameraViewController <UIImagePickerCameraViewController>
{
    int _previousStatusBarMode;
    int _newStatusBarMode;
    struct CGAffineTransform _previewViewTransform;
}

- (id)init;
- (BOOL)_displaysFullScreen;
- (void)dealloc;
- (id)_cameraView;
- (void)loadView;
- (void)setParentViewController:(id)arg1;
- (int)_imagePickerStatusBarMode;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)setAllowsEditing:(BOOL)arg1;
- (void)setWantsImageData:(BOOL)arg1;
- (void)_editabilityChanged:(id)arg1;
- (void)_setImagePickerMediaTypes:(id)arg1;
- (BOOL)_showsCameraControls;
- (void)_setShowsCameraControls:(BOOL)arg1;
- (id)_cameraOverlayView;
- (void)_setCameraOverlayView:(id)arg1;
- (struct CGAffineTransform)_cameraViewTransform;
- (void)_setCameraViewTransform:(struct CGAffineTransform)arg1;
- (void)_takePicture;
- (void)cameraViewCancelled:(id)arg1;
- (void)cameraView:(id)arg1 photoSaved:(id)arg2;
- (void)cameraView:(id)arg1 videoSavedToPath:(id)arg2 editingInfo:(id)arg3;
- (BOOL)cameraViewShouldShowPreviewAfterSelection:(id)arg1;

@end

@interface PLPublishingAgent : NSObject <PLDataArrayInputStreamProgressDelegate>
{
    id _userInfo;
    id _delegate;
    NSString *_mediaPath;
    NSData *_mediaData;
    BOOL _deleteAfterPublishing;
    double _changeRate;
    long long _currentValue;
    double _estimatedTimeRemaining;
    long long _maxValue;
    long long _normalizedCurrentValue;
    long long _normalizedMaxValue;
    float _percentComplete;
    NSMutableArray *_snapshotTimes;
    NSMutableArray *_snapshotValues;
    UINavigationController *_parentNavigationController;
}

+ (id)publishingAgentForBundleNamed:(id)arg1;
- (id)initWithMediaPath:(id)arg1;
- (void)dealloc;
- (id)mediaPath;
- (void)setMediaPath:(id)arg1;
- (void)setDeleteMediaFileAfterPublishing:(BOOL)arg1;
- (BOOL)deleteMediaFileAfterPublishing;
- (id)mediaData;
- (void)setMediaData:(id)arg1;
- (id)userInfo;
- (void)setUserInfo:(id)arg1;
- (id)navigationController;
- (void)cancelButtonClicked;
- (void)doneButtonClicked;
- (void)publish;
- (id)serviceName;
- (void)presentModalSheetInNavigationController:(id)arg1;
- (void)dismiss;
- (id)parentNavigationController;
- (id)tellAFriendURL;
- (id)mediaURL;
- (id)mediaTitle;
- (id)tellAFriendSubject;
- (double)maximumVideoDuration;
- (void)dataArrayInputStreamBytesWereRead:(id)arg1;
- (void)_snapshot;
- (void)_updateStatisticsFromSnapshots;
- (double)estimatedTimeRemaining;
- (float)percentComplete;
- (id)delegate;
- (void)setDelegate:(id)arg1;

@end

@interface PLTableViewEditableTagCell : PLTableViewEditableCell
{
}

- (BOOL)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (BOOL)textFieldShouldReturn:(id)arg1;

@end

@interface PLTableViewEditableCell : UITableViewCell <UITextViewDelegate, UITextFieldDelegate>
{
    PLTextView *_textView;
    UITextField *_textField;
    id _delegate;
    BOOL _forceFirstResponder;
}

- (id)initWithFrame:(struct CGRect)arg1 multiLine:(BOOL)arg2;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (void)forceFirstResponder:(BOOL)arg1;
- (void)layoutSubviews;
- (void)becomeFirstResponder;
- (void)resignFirstResponder;
- (BOOL)isEditing;
- (id)value;
- (void)setPlaceholderText:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (BOOL)textFieldShouldEndEditing:(id)arg1;
- (BOOL)textFieldShouldReturn:(id)arg1;
- (void)_textFieldChanged;
- (struct CGSize)contentSize;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (BOOL)textViewShouldEndEditing:(id)arg1;

@end

@interface PLTextView : UITextView
{
    UILabel *_placeholder;
    BOOL _showingPlaceholder;
}

- (void)dealloc;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)updatePlaceholder;
- (id)_placeholder;
- (void)setPlaceholderText:(id)arg1;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;

@end

@interface PLDataArrayInputStream : NSInputStream
{
    NSArray *_dataArray;
    NSMutableData *_bodyData;
    unsigned int _dataCount;
    unsigned int _dataLength;
    unsigned int _dataOffset;
    unsigned int _currentIndex;
    unsigned int _currentOffset;
    unsigned int _currentLength;
    BOOL _openEventSent;
    unsigned int _streamStatus;
    id _delegate;
    id <PLDataArrayInputStreamProgressDelegate> _progressDelegate;
    struct __CFRunLoopSource *_rls;
    void *_clientCallback;
    CDAnonymousStruct2 _clientContext;
}

- (id)initWithDataArray:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (void)_streamEventTrigger;
- (void)_scheduleCallback;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (BOOL)_setCFClientFlags:(unsigned long)arg1 callback:(void *)arg2 context:(CDAnonymousStruct2 *)arg3;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)open;
- (void)close;
- (unsigned int)streamStatus;
- (void)_updateProgress;
- (void)_scheduleProgressUpdate;
- (int)read:(char *)arg1 maxLength:(unsigned int)arg2;
- (unsigned int)totalBytes;
- (unsigned int)bytesRead;
- (BOOL)hasBytesAvailable;
- (BOOL)getBuffer:(char **)arg1 length:(unsigned int *)arg2;
- (id)progressDelegate;
- (void)setProgressDelegate:(id)arg1;

@end

@interface PLCropOverlayBottomBarButton : UIButton
{
}

- (id)initWithTitle:(id)arg1 isDoneButton:(BOOL)arg2;
- (void)setTitle:(id)arg1;
- (void)layoutSubviews;

@end

@interface PLCropOverlayBottomBar : UIView
{
    UIImage *_backgroundImage;
    UIImageView *_takePhotoView;
    PLCameraButton *_shutterButton;
    PLCropOverlayBottomBarButton *_cancelButton;
    UIView *_modeSwitch;
    UIButton *_playPauseButton;
    UIImage *_playImage;
    UIImage *_pauseImage;
    NSString *_title;
    UIImageView *_editPhotoView;
    PLCropOverlayBottomBarButton *_editCancelButton;
    PLCropOverlayBottomBarButton *_editDoneButton;
    UILabel *_editLabel;
    id _delegate;
    unsigned int _takingPhotoView:1;
    unsigned int _wasEnabled:1;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)adjustButtonWidths;
- (void)_createTakePhotoView;
- (void)_prepareForPhotoEdit;
- (id)_playImage;
- (id)_pauseImage;
- (void)prepareForVideoEdit;
- (void)_playPause:(id)arg1;
- (void)_updatePlayPauseButtonImage:(id)arg1;
- (void)didPlayVideo;
- (void)didPauseVideo;
- (void)setTakePhoto:(BOOL)arg1;
- (void)setEnabled:(BOOL)arg1;
- (id)shutterButton;
- (void)setModeSwitch:(id)arg1;
- (id)modeSwitch;
- (void)setTitle:(id)arg1;
- (void)setOKButtonTitle:(id)arg1;
- (void)setCancelButtonTitle:(id)arg1;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)cancelButtonClicked:(id)arg1;
- (void)_animateViewOriginDeltaX:(float)arg1;
- (void)editCancelButtonClicked:(id)arg1;
- (void)doneButtonClicked:(id)arg1;
- (void)_didCapture;
- (void)didCapturePhoto;
- (void)didCaptureVideo;
- (void)_slideAnimationComplete:(id)arg1;

@end

@interface PLProgressView : UIView
{
    UIImageView *_backgroundView;
    UILabel *_labelView;
    UIImageView *_progressView;
    UIImageView *_wellView;
    unsigned int _didLayout:1;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)layoutSubviews;
- (void)_updateProgressWidthForPercent:(float)arg1;
- (void)updateUIForPublishingAgent:(id)arg1;
- (void)setLabelText:(id)arg1;
- (void)updateUIForRemaking:(float)arg1;

@end

@interface PLUISavedPhotosAlbumViewController : PLUIAlbumViewController
{
}

- (void)setParentViewController:(id)arg1;

@end

@interface PLCameraFocusView : UIView
{
    NSArray *_images;
    CAKeyframeAnimation *_contentsAnimation;
    CAKeyframeAnimation *_boundsAnimation;
}

- (id)init:(BOOL)arg1;
- (void)dealloc;
- (id)_createContentsAnimation;
- (id)_createBoundsAnimation;
- (void)startAnimating;
- (void)stopAnimating;
- (void)_fadeOut;
- (void)_fadeOutDidFinish;
- (void)focusDidEnd;

@end

@interface PLToolbar : UIToolbar
{
    unsigned int _backgroundHidden:1;
    unsigned int _backgroundAlwaysVisible:1;
    UIToolbar *_persistentToolbar;
}

- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)backgroundHidden;
- (void)setBackgroundHidden:(BOOL)arg1;
- (BOOL)backgroundAlwaysVisible;
- (void)setBackgroundAlwaysVisible:(BOOL)arg1;

@end

@interface PLMessageUIProxy : NSObject
{
}

+ (Class)MFMailComposeViewControllerClass;
+ (id)createComposeViewController;
+ (id)createComposeViewControllerWithComposition:(id)arg1;
+ (Class)MailCompositionContextClass;
+ (id)createMailCompositionContextWithComposeType:(int)arg1;

@end

@interface PLVideoRemaker : NSObject
{
    NSString *_path;
    NSString *_trimmedPath;
    double _duration;
    double _trimStartTime;
    double _trimEndTime;
    int _mode;
    AVRemaker *_remaker;
    float _percentComplete;
    NSTimer *_progressTimer;
    PLProgressView *_progressView;
    id _delegate;
}

+ (double)maximumDurationForTrimMode:(int)arg1;
- (id)initWithPath:(id)arg1;
- (void)dealloc;
- (id)progressView;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (double)duration;
- (void)setDuration:(double)arg1;
- (int)mode;
- (void)setMode:(int)arg1;
- (double)trimStartTime;
- (void)setTrimStartTime:(double)arg1;
- (double)trimEndTime;
- (void)setTrimEndTime:(double)arg1;
- (void)_resetProgressTimer;
- (void)_removeProgressTimer;
- (void)_updateProgress;
- (void)remake;
- (void)cancel;
- (void)_remakerDidFinish:(id)arg1;

@end

@interface TrimVideoNavigationItem : UINavigationItem
{
}

- (int)barStyle;

@end

@interface PLUIEditVideoViewController : PLUIImageViewController <UIImagePickerControllerDelegate, UINavigationControllerDelegate>
{
    NSDictionary *_options;
    UIImagePickerController *_imagePicker;
    UINavigationItem *_navItem;
    id _delegate;
    unsigned int _canCreateMetadata;
}

- (BOOL)_displaysFullScreen;
- (BOOL)_editingForThirdParty;
- (void)_setupNavigationItemAndTrimTitle:(id)arg1;
- (id)initWithPhoto:(id)arg1 trimTitle:(id)arg2;
- (id)initWithProperties:(id)arg1;
- (id)navigationItem;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (void)setImagePickerOptions:(id)arg1;
- (id)imagePickerOptions;
- (id)_trimMessage;
- (id)imagePickerController;
- (void)didChooseVideoAtPath:(id)arg1 options:(id)arg2;
- (void)videoRemakerDidEndRemaking:(id)arg1 temporaryPath:(id)arg2;
- (void)_cancelTrim:(id)arg1;
- (int)cropOverlayMode;
- (struct CGRect)previewFrame;
- (void)_trimVideo:(id)arg1;
- (float)videoViewScrubberYOrigin:(id)arg1;
- (BOOL)videoViewCanCreateMetadata:(id)arg1;
- (void)videoViewPlaybackDidFail:(id)arg1;

@end

@interface PLCachedVideoFilesManager : NSObject <MLPhotoBakedThumbnailsDelegate>
{
    MLPhotoLibrary *_photoLibrary;
    BOOL _cancelPostProcessing;
    NSLock *_cancellationLock;
    NSMutableDictionary *_videosMetadata;
    NSDate *_currentDatabaseModTime;
}

- (id)initWithPhotoLibrary:(id)arg1;
- (void)dealloc;
- (void)postProcessVideosAfterSync;
- (void)cancelPostProcessing;
- (void)deleteOldAlbumVideosBakedThumbnails;
- (void)_createNewVideoCachedFiles;
- (void)decorateThumbnail:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)_garbageCollectCachedFiles;
- (void)_postProcessVideosAfterSync;
- (BOOL)_photosDatabaseHasChangedSinceLastCheck;
- (void)_finishedPostProcessingVideos;
- (id)_pathToVideosMetadataFile;
- (void)_removeOldAlbumVideosBakedThumbnails;

@end

@interface UIView (PhotosCGPathUtilities)
+ (void)calculateControlPointsFromMidpoint:(struct CGPoint)arg1 toMidpoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint *)arg3 controlPoint2:(struct CGPoint *)arg4;
+ (void)addCurveToPath:(struct CGPath *)arg1 fromRect:(struct CGRect)arg2 toRect:(struct CGRect)arg3 swapControlPoints:(BOOL)arg4;
@end

@interface UIApplication (PLPPAdditions)
+ (id)pickerBundle;
+ (void)setPickerBundle:(id)arg1;
@end

@interface NSString (CameraAlbumSortingAdditions)
- (int)_sortByCameraImageNumber:(id)arg1;
@end

@interface MLPhotoDCFDirectory (CameraAlbumSortingAdditions)
- (int)_sortByDirectoryNumber:(id)arg1;
@end

@interface UIApplication (PhotosDelayedTermination)
- (void)setDelaySuspend:(BOOL)arg1;
@end

@interface PLLocationController (PhotoSavingAdditions)
- (void)_locationlessImageFinishedWriting:(id)arg1 withError:(id)arg2 atPath:(id)arg3;
@end

@interface MLPhotoDCFFileGroup (CameraAdditions) <PLImageWriterDelegate>
- (void)_invokeCompletionSelectorForJob:(id)arg1 error:(id)arg2;
- (void)imageWriterCompletedJob:(id)arg1 withError:(id)arg2;
- (void)setImage:(id)arg1 previewImage:(id)arg2 type:(struct __CFString *)arg3 extension:(id)arg4 exifProperties:(id)arg5 date:(id)arg6 imageData:(struct __CFData *)arg7 completionTarget:(id)arg8 completionSelector:(SEL)arg9 contextInfo:(void *)arg10;
- (void)imageWriterCompletedVideoJob:(id)arg1 withError:(id)arg2;
- (void)processVideoWithMetadata:(id)arg1 target:(id)arg2 completionSelector:(SEL)arg3 progressStack:(CDAnonymousStruct1 *)arg4;
- (void)regenerateVideoThumbnailsWithCompletionTarget:(id)arg1 creationDate:(id)arg2 completionSelector:(SEL)arg3 progressStack:(CDAnonymousStruct1 *)arg4;
- (void)processVideoAtPath:(id)arg1 createCopy:(BOOL)arg2 completionTarget:(id)arg3 completionSelector:(SEL)arg4 contextInfo:(void *)arg5;
@end

@interface NSFileManager (NSFileManagerAdditions_MobileSlideShow)
- (id)makeUniqueDirectoryWithPath:(id)arg1;
- (id)tmpFileForVideoTranscode;
@end

@interface MLPhotoAlbum (PhotosAdditions)
+ (id)defaultPNGAlbum;
- (id)posterImage;
@end

@interface MLPhoto (PhotosAdditions)
+ (struct CGImage *)createAndSaveIconForWallpaperImage:(id)arg1;
+ (struct CGImage *)createUnrotatedImageWithSize:(struct CGSize)arg1 originalImage:(struct CGImage *)arg2 imageOrientation:(int)arg3;
- (id)thumbnailImage;
- (struct CGImage *)createThumbnailCGImageRef;
- (struct CGImage *)createFullScreenCGImageRef:(int *)arg1 properties:(const struct __CFDictionary **)arg2;
- (struct CGImage *)createFullSizeCGImageRefForImagePickerClient:(int *)arg1;
- (struct CGImage *)createFullSizeCGImageRef:(int *)arg1;
- (struct CGImage *)createLowResolutionFullScreenCGImageRef;
- (BOOL)hasFullSizeImage;
- (struct __CFData *)createEmailImageDataWithLargeImage:(id)arg1 imageToAnimate:(struct CGImage **)arg2 scaledImage:(struct CGImage **)arg3 maximumSize:(struct CGSize)arg4;
- (void)copyToPasteboard;
@end

@interface MLPhoto (VideoAdditions)
- (id)previewFrameImageFromDatabase;
@end

@interface PLCropOverlay (PhotoSaving)
- (void)beginBackgroundSaveWithTile:(id)arg1 progressTitle:(id)arg2 completionCallbackTarget:(id)arg3 options:(int)arg4;
- (void)_backgroundSavePhoto:(id)arg1;
- (void)_savePhotoFinished:(id)arg1;
@end

@interface PLImageTile (PLImagePickerUtils)
- (id)_createOriginalImageForPicker;
- (int)_imageOrientation;
@end

@interface UIViewController (PLNavigationControllerInterface)
- (id)imagePickerController;
- (id)imagePickerOptions;
- (BOOL)useTelephonyUI;
- (BOOL)allowEditing;
- (int)filterForMediaTypes:(id)arg1;
- (int)setStatusBarForFullScreenViewAnimated:(BOOL)arg1 useTelephonyUI:(BOOL)arg2 canHideStatusBar:(BOOL)arg3 newStatusBarMode:(int *)arg4;
- (void)revertStatusBar:(int)arg1 currentStatusBar:(int)arg2 animated:(BOOL)arg3;
@end

@interface MLPhoto (thumbmails)
- (void)saveBakedVideoThumbnail;
- (void)decorateThumbnail:(id)arg1 inContext:(struct CGContext *)arg2;
@end

@interface NSArray (PLPasteboardUtilities)
- (void)copyPhotosToPasteboard;
@end

